
3_Omni_Base.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800200  00000d42  00000dd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800228  00800228  00000dfe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000dfe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00000e70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001fbf  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001118  00000000  00000000  00002fb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c1d  00000000  00000000  000040cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000478  00000000  00000000  00004cec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b39  00000000  00000000  00005164  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d56  00000000  00000000  00005c9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  000069f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	80 c0       	rjmp	.+256    	; 0x102 <__ctors_end>
   2:	00 00       	nop
   4:	9d c0       	rjmp	.+314    	; 0x140 <__bad_interrupt>
   6:	00 00       	nop
   8:	9b c0       	rjmp	.+310    	; 0x140 <__bad_interrupt>
   a:	00 00       	nop
   c:	99 c0       	rjmp	.+306    	; 0x140 <__bad_interrupt>
   e:	00 00       	nop
  10:	97 c0       	rjmp	.+302    	; 0x140 <__bad_interrupt>
  12:	00 00       	nop
  14:	95 c0       	rjmp	.+298    	; 0x140 <__bad_interrupt>
  16:	00 00       	nop
  18:	93 c0       	rjmp	.+294    	; 0x140 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	91 c0       	rjmp	.+290    	; 0x140 <__bad_interrupt>
  1e:	00 00       	nop
  20:	8f c0       	rjmp	.+286    	; 0x140 <__bad_interrupt>
  22:	00 00       	nop
  24:	8d c0       	rjmp	.+282    	; 0x140 <__bad_interrupt>
  26:	00 00       	nop
  28:	8b c0       	rjmp	.+278    	; 0x140 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	89 c0       	rjmp	.+274    	; 0x140 <__bad_interrupt>
  2e:	00 00       	nop
  30:	87 c0       	rjmp	.+270    	; 0x140 <__bad_interrupt>
  32:	00 00       	nop
  34:	85 c0       	rjmp	.+266    	; 0x140 <__bad_interrupt>
  36:	00 00       	nop
  38:	83 c0       	rjmp	.+262    	; 0x140 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	81 c0       	rjmp	.+258    	; 0x140 <__bad_interrupt>
  3e:	00 00       	nop
  40:	7f c0       	rjmp	.+254    	; 0x140 <__bad_interrupt>
  42:	00 00       	nop
  44:	7d c0       	rjmp	.+250    	; 0x140 <__bad_interrupt>
  46:	00 00       	nop
  48:	7b c0       	rjmp	.+246    	; 0x140 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	79 c0       	rjmp	.+242    	; 0x140 <__bad_interrupt>
  4e:	00 00       	nop
  50:	77 c0       	rjmp	.+238    	; 0x140 <__bad_interrupt>
  52:	00 00       	nop
  54:	75 c0       	rjmp	.+234    	; 0x140 <__bad_interrupt>
  56:	00 00       	nop
  58:	73 c0       	rjmp	.+230    	; 0x140 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	71 c0       	rjmp	.+226    	; 0x140 <__bad_interrupt>
  5e:	00 00       	nop
  60:	6f c0       	rjmp	.+222    	; 0x140 <__bad_interrupt>
  62:	00 00       	nop
  64:	ff c1       	rjmp	.+1022   	; 0x464 <__vector_25>
  66:	00 00       	nop
  68:	6b c0       	rjmp	.+214    	; 0x140 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	69 c0       	rjmp	.+210    	; 0x140 <__bad_interrupt>
  6e:	00 00       	nop
  70:	67 c0       	rjmp	.+206    	; 0x140 <__bad_interrupt>
  72:	00 00       	nop
  74:	65 c0       	rjmp	.+202    	; 0x140 <__bad_interrupt>
  76:	00 00       	nop
  78:	63 c0       	rjmp	.+198    	; 0x140 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	61 c0       	rjmp	.+194    	; 0x140 <__bad_interrupt>
  7e:	00 00       	nop
  80:	5f c0       	rjmp	.+190    	; 0x140 <__bad_interrupt>
  82:	00 00       	nop
  84:	5d c0       	rjmp	.+186    	; 0x140 <__bad_interrupt>
  86:	00 00       	nop
  88:	5b c0       	rjmp	.+182    	; 0x140 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	59 c0       	rjmp	.+178    	; 0x140 <__bad_interrupt>
  8e:	00 00       	nop
  90:	f9 c1       	rjmp	.+1010   	; 0x484 <__vector_36>
  92:	00 00       	nop
  94:	55 c0       	rjmp	.+170    	; 0x140 <__bad_interrupt>
  96:	00 00       	nop
  98:	53 c0       	rjmp	.+166    	; 0x140 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	51 c0       	rjmp	.+162    	; 0x140 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	4f c0       	rjmp	.+158    	; 0x140 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	4d c0       	rjmp	.+154    	; 0x140 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	4b c0       	rjmp	.+150    	; 0x140 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	49 c0       	rjmp	.+146    	; 0x140 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	47 c0       	rjmp	.+142    	; 0x140 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	45 c0       	rjmp	.+138    	; 0x140 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	43 c0       	rjmp	.+134    	; 0x140 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	41 c0       	rjmp	.+130    	; 0x140 <__bad_interrupt>
  be:	00 00       	nop
  c0:	3f c0       	rjmp	.+126    	; 0x140 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	3d c0       	rjmp	.+122    	; 0x140 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	3b c0       	rjmp	.+118    	; 0x140 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	eb c1       	rjmp	.+982    	; 0x4a4 <__vector_51>
  ce:	00 00       	nop
  d0:	37 c0       	rjmp	.+110    	; 0x140 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	35 c0       	rjmp	.+106    	; 0x140 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	f5 c1       	rjmp	.+1002   	; 0x4c4 <__vector_54>
  da:	00 00       	nop
  dc:	31 c0       	rjmp	.+98     	; 0x140 <__bad_interrupt>
  de:	00 00       	nop
  e0:	2f c0       	rjmp	.+94     	; 0x140 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	05 a8       	ldd	r0, Z+53	; 0x35
  e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
  e8:	b2 d4       	rcall	.+2404   	; 0xa4e <__floatsisf+0x5a>
  ea:	4e b9       	out	0x0e, r20	; 14
  ec:	38 36       	cpi	r19, 0x68	; 104
  ee:	a9 02       	muls	r26, r25
  f0:	0c 50       	subi	r16, 0x0C	; 12
  f2:	b9 91       	ld	r27, Y+
  f4:	86 88       	ldd	r8, Z+22	; 0x16
  f6:	08 3c       	cpi	r16, 0xC8	; 200
  f8:	a6 aa       	std	Z+54, r10	; 0x36
  fa:	aa 2a       	or	r10, r26
  fc:	be 00       	.word	0x00be	; ????
  fe:	00 00       	nop
 100:	80 3f       	cpi	r24, 0xF0	; 240

00000102 <__ctors_end>:
 102:	11 24       	eor	r1, r1
 104:	1f be       	out	0x3f, r1	; 63
 106:	cf ef       	ldi	r28, 0xFF	; 255
 108:	d1 e2       	ldi	r29, 0x21	; 33
 10a:	de bf       	out	0x3e, r29	; 62
 10c:	cd bf       	out	0x3d, r28	; 61
 10e:	00 e0       	ldi	r16, 0x00	; 0
 110:	0c bf       	out	0x3c, r16	; 60

00000112 <__do_copy_data>:
 112:	12 e0       	ldi	r17, 0x02	; 2
 114:	a0 e0       	ldi	r26, 0x00	; 0
 116:	b2 e0       	ldi	r27, 0x02	; 2
 118:	e2 e4       	ldi	r30, 0x42	; 66
 11a:	fd e0       	ldi	r31, 0x0D	; 13
 11c:	00 e0       	ldi	r16, 0x00	; 0
 11e:	0b bf       	out	0x3b, r16	; 59
 120:	02 c0       	rjmp	.+4      	; 0x126 <__do_copy_data+0x14>
 122:	07 90       	elpm	r0, Z+
 124:	0d 92       	st	X+, r0
 126:	a8 32       	cpi	r26, 0x28	; 40
 128:	b1 07       	cpc	r27, r17
 12a:	d9 f7       	brne	.-10     	; 0x122 <__do_copy_data+0x10>

0000012c <__do_clear_bss>:
 12c:	22 e0       	ldi	r18, 0x02	; 2
 12e:	a8 e2       	ldi	r26, 0x28	; 40
 130:	b2 e0       	ldi	r27, 0x02	; 2
 132:	01 c0       	rjmp	.+2      	; 0x136 <.do_clear_bss_start>

00000134 <.do_clear_bss_loop>:
 134:	1d 92       	st	X+, r1

00000136 <.do_clear_bss_start>:
 136:	a6 33       	cpi	r26, 0x36	; 54
 138:	b2 07       	cpc	r27, r18
 13a:	e1 f7       	brne	.-8      	; 0x134 <.do_clear_bss_loop>
 13c:	02 d0       	rcall	.+4      	; 0x142 <main>
 13e:	ff c5       	rjmp	.+3070   	; 0xd3e <_exit>

00000140 <__bad_interrupt>:
 140:	5f cf       	rjmp	.-322    	; 0x0 <__vectors>

00000142 <main>:
#include <avr/interrupt.h>
#include "Wheel.h"
#include "headers.h"

int main(void)
{    
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	cd b7       	in	r28, 0x3d	; 61
 148:	de b7       	in	r29, 0x3e	; 62
 14a:	a7 97       	sbiw	r28, 0x27	; 39
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	f8 94       	cli
 150:	de bf       	out	0x3e, r29	; 62
 152:	0f be       	out	0x3f, r0	; 63
 154:	cd bf       	out	0x3d, r28	; 61
	sei();
 156:	78 94       	sei
	
	Wheel w;
	w.init();
 158:	ce 01       	movw	r24, r28
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	f0 d1       	rcall	.+992    	; 0x53e <_ZN5Wheel4initEv>
	
	
	while(1)
	{
		
		w.get_joystick_data();
 15e:	ce 01       	movw	r24, r28
 160:	01 96       	adiw	r24, 0x01	; 1
 162:	43 d2       	rcall	.+1158   	; 0x5ea <_ZN5Wheel17get_joystick_dataEv>
		w.calculate_wheel_velocity();
 164:	ce 01       	movw	r24, r28
 166:	01 96       	adiw	r24, 0x01	; 1
 168:	b6 d2       	rcall	.+1388   	; 0x6d6 <_ZN5Wheel24calculate_wheel_velocityEv>
		w.update_wheel_velocity();
 16a:	ce 01       	movw	r24, r28
 16c:	01 96       	adiw	r24, 0x01	; 1
 16e:	2b d3       	rcall	.+1622   	; 0x7c6 <_ZN5Wheel21update_wheel_velocityEv>
 170:	f6 cf       	rjmp	.-20     	; 0x15e <main+0x1c>

00000172 <_ZN5Motor7InitPWMEv>:
 172:	fc 01       	movw	r30, r24

}

void Motor::InitPWM()
{
	if (num==1)
 174:	80 81       	ld	r24, Z
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	f1 f4       	brne	.+60     	; 0x1b6 <_ZN5Motor7InitPWMEv+0x44>
	{
		OUTPUT(DD_F1);
 17a:	e7 e0       	ldi	r30, 0x07	; 7
 17c:	f1 e0       	ldi	r31, 0x01	; 1
 17e:	80 81       	ld	r24, Z
 180:	82 60       	ori	r24, 0x02	; 2
 182:	80 83       	st	Z, r24
		OUTPUT(DD_B1);
 184:	80 81       	ld	r24, Z
 186:	81 60       	ori	r24, 0x01	; 1
 188:	80 83       	st	Z, r24

		OUTPUT(DD_PWM1);
 18a:	ea e0       	ldi	r30, 0x0A	; 10
 18c:	f1 e0       	ldi	r31, 0x01	; 1
 18e:	80 81       	ld	r24, Z
 190:	80 62       	ori	r24, 0x20	; 32
 192:	80 83       	st	Z, r24

		PWM_TCCRA1	|=  ( 1 << PWM_1COM1 ) | ( 1 << PWM_1WGM1 );														//
 194:	e0 e2       	ldi	r30, 0x20	; 32
 196:	f1 e0       	ldi	r31, 0x01	; 1
 198:	80 81       	ld	r24, Z
 19a:	8a 60       	ori	r24, 0x0A	; 10
 19c:	80 83       	st	Z, r24
		PWM_TCCRB1	|=  ( 1 << PWM_1WGM2 ) | ( 1 << PWM_1WGM3 ) | ( 1 << PWM_1CS1);									//PRESCALAR 8
 19e:	e1 e2       	ldi	r30, 0x21	; 33
 1a0:	f1 e0       	ldi	r31, 0x01	; 1
 1a2:	80 81       	ld	r24, Z
 1a4:	8a 61       	ori	r24, 0x1A	; 26
 1a6:	80 83       	st	Z, r24
		PWM_ICR1		 =         ICR_TOP;
 1a8:	89 ef       	ldi	r24, 0xF9	; 249
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
 1b0:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
 1b4:	08 95       	ret
	}
	else if(num==2)
 1b6:	82 30       	cpi	r24, 0x02	; 2
 1b8:	f1 f4       	brne	.+60     	; 0x1f6 <_ZN5Motor7InitPWMEv+0x84>
	{
		OUTPUT(DD_F2);
 1ba:	e7 e0       	ldi	r30, 0x07	; 7
 1bc:	f1 e0       	ldi	r31, 0x01	; 1
 1be:	80 81       	ld	r24, Z
 1c0:	84 60       	ori	r24, 0x04	; 4
 1c2:	80 83       	st	Z, r24
		OUTPUT(DD_B2);
 1c4:	80 81       	ld	r24, Z
 1c6:	88 60       	ori	r24, 0x08	; 8
 1c8:	80 83       	st	Z, r24

		OUTPUT(DD_PWM2);
 1ca:	ea e0       	ldi	r30, 0x0A	; 10
 1cc:	f1 e0       	ldi	r31, 0x01	; 1
 1ce:	80 81       	ld	r24, Z
 1d0:	88 60       	ori	r24, 0x08	; 8
 1d2:	80 83       	st	Z, r24

		PWM_TCCRA2	|=  ( 1 << PWM_2COM1 ) | ( 1 << PWM_2WGM1 );														//
 1d4:	e0 e2       	ldi	r30, 0x20	; 32
 1d6:	f1 e0       	ldi	r31, 0x01	; 1
 1d8:	80 81       	ld	r24, Z
 1da:	82 68       	ori	r24, 0x82	; 130
 1dc:	80 83       	st	Z, r24
		PWM_TCCRB2	|=  ( 1 << PWM_2WGM2 ) | ( 1 << PWM_2WGM3 ) | ( 1 << PWM_2CS1);									//PRESCALAR 8
 1de:	e1 e2       	ldi	r30, 0x21	; 33
 1e0:	f1 e0       	ldi	r31, 0x01	; 1
 1e2:	80 81       	ld	r24, Z
 1e4:	8a 61       	ori	r24, 0x1A	; 26
 1e6:	80 83       	st	Z, r24
		PWM_ICR2		 =         ICR_TOP;
 1e8:	89 ef       	ldi	r24, 0xF9	; 249
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
 1f0:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
 1f4:	08 95       	ret
	}
	else if(num==3)
 1f6:	83 30       	cpi	r24, 0x03	; 3
 1f8:	e9 f4       	brne	.+58     	; 0x234 <_ZN5Motor7InitPWMEv+0xc2>
	{
		OUTPUT(DD_F3);
 1fa:	e7 e0       	ldi	r30, 0x07	; 7
 1fc:	f1 e0       	ldi	r31, 0x01	; 1
 1fe:	80 81       	ld	r24, Z
 200:	80 62       	ori	r24, 0x20	; 32
 202:	80 83       	st	Z, r24
		OUTPUT(DD_B3);
 204:	80 81       	ld	r24, Z
 206:	80 61       	ori	r24, 0x10	; 16
 208:	80 83       	st	Z, r24

		OUTPUT(DD_PWM3);
 20a:	ea e0       	ldi	r30, 0x0A	; 10
 20c:	f1 e0       	ldi	r31, 0x01	; 1
 20e:	80 81       	ld	r24, Z
 210:	80 61       	ori	r24, 0x10	; 16
 212:	80 83       	st	Z, r24

		PWM_TCCRA3	|=  ( 1 << PWM_3COM1 ) | ( 1 << PWM_3WGM1 );														//
 214:	e0 e2       	ldi	r30, 0x20	; 32
 216:	f1 e0       	ldi	r31, 0x01	; 1
 218:	80 81       	ld	r24, Z
 21a:	82 62       	ori	r24, 0x22	; 34
 21c:	80 83       	st	Z, r24
		PWM_TCCRB3	|=  ( 1 << PWM_3WGM2 ) | ( 1 << PWM_3WGM3 ) | ( 1 << PWM_3CS1);									//PRESCALAR 8
 21e:	e1 e2       	ldi	r30, 0x21	; 33
 220:	f1 e0       	ldi	r31, 0x01	; 1
 222:	80 81       	ld	r24, Z
 224:	8a 61       	ori	r24, 0x1A	; 26
 226:	80 83       	st	Z, r24
		PWM_ICR3		 =         ICR_TOP;
 228:	89 ef       	ldi	r24, 0xF9	; 249
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
 230:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
 234:	08 95       	ret

00000236 <_ZN5Motor19SetForwardDirectionEv>:
	
}

void Motor::SetForwardDirection()
{
	switch(num)
 236:	fc 01       	movw	r30, r24
 238:	80 81       	ld	r24, Z
 23a:	82 30       	cpi	r24, 0x02	; 2
 23c:	69 f0       	breq	.+26     	; 0x258 <_ZN5Motor19SetForwardDirectionEv+0x22>
 23e:	83 30       	cpi	r24, 0x03	; 3
 240:	a1 f0       	breq	.+40     	; 0x26a <_ZN5Motor19SetForwardDirectionEv+0x34>
 242:	81 30       	cpi	r24, 0x01	; 1
 244:	d1 f4       	brne	.+52     	; 0x27a <_ZN5Motor19SetForwardDirectionEv+0x44>
	{
		case 1:
			SET		(DD_F1);
 246:	e8 e0       	ldi	r30, 0x08	; 8
 248:	f1 e0       	ldi	r31, 0x01	; 1
 24a:	80 81       	ld	r24, Z
 24c:	82 60       	ori	r24, 0x02	; 2
 24e:	80 83       	st	Z, r24
			CLEAR	(DD_B1);
 250:	80 81       	ld	r24, Z
 252:	8e 7f       	andi	r24, 0xFE	; 254
 254:	80 83       	st	Z, r24
			break;
 256:	08 95       	ret
		case 2:
			SET		(DD_F2);
 258:	e8 e0       	ldi	r30, 0x08	; 8
 25a:	f1 e0       	ldi	r31, 0x01	; 1
 25c:	80 81       	ld	r24, Z
 25e:	84 60       	ori	r24, 0x04	; 4
 260:	80 83       	st	Z, r24
			CLEAR	(DD_B2);
 262:	80 81       	ld	r24, Z
 264:	87 7f       	andi	r24, 0xF7	; 247
 266:	80 83       	st	Z, r24
			break;
 268:	08 95       	ret
		case 3:
			SET		(DD_F3);
 26a:	e8 e0       	ldi	r30, 0x08	; 8
 26c:	f1 e0       	ldi	r31, 0x01	; 1
 26e:	80 81       	ld	r24, Z
 270:	80 62       	ori	r24, 0x20	; 32
 272:	80 83       	st	Z, r24
			CLEAR	(DD_B3);
 274:	80 81       	ld	r24, Z
 276:	8f 7e       	andi	r24, 0xEF	; 239
 278:	80 83       	st	Z, r24
 27a:	08 95       	ret

0000027c <_ZN5Motor19SetReverseDirectionEv>:
	

}
void Motor::SetReverseDirection()
{
	switch(num)
 27c:	fc 01       	movw	r30, r24
 27e:	80 81       	ld	r24, Z
 280:	82 30       	cpi	r24, 0x02	; 2
 282:	69 f0       	breq	.+26     	; 0x29e <_ZN5Motor19SetReverseDirectionEv+0x22>
 284:	83 30       	cpi	r24, 0x03	; 3
 286:	a1 f0       	breq	.+40     	; 0x2b0 <_ZN5Motor19SetReverseDirectionEv+0x34>
 288:	81 30       	cpi	r24, 0x01	; 1
 28a:	d1 f4       	brne	.+52     	; 0x2c0 <_ZN5Motor19SetReverseDirectionEv+0x44>
	{
		case 1:
			CLEAR	(DD_F1);
 28c:	e8 e0       	ldi	r30, 0x08	; 8
 28e:	f1 e0       	ldi	r31, 0x01	; 1
 290:	80 81       	ld	r24, Z
 292:	8d 7f       	andi	r24, 0xFD	; 253
 294:	80 83       	st	Z, r24
			SET		(DD_B1);
 296:	80 81       	ld	r24, Z
 298:	81 60       	ori	r24, 0x01	; 1
 29a:	80 83       	st	Z, r24
			break;
 29c:	08 95       	ret
		case 2:
			CLEAR	(DD_F2);
 29e:	e8 e0       	ldi	r30, 0x08	; 8
 2a0:	f1 e0       	ldi	r31, 0x01	; 1
 2a2:	80 81       	ld	r24, Z
 2a4:	8b 7f       	andi	r24, 0xFB	; 251
 2a6:	80 83       	st	Z, r24
			SET		(DD_B2);
 2a8:	80 81       	ld	r24, Z
 2aa:	88 60       	ori	r24, 0x08	; 8
 2ac:	80 83       	st	Z, r24
			break;
 2ae:	08 95       	ret
		case 3:
			CLEAR	(DD_F3);
 2b0:	e8 e0       	ldi	r30, 0x08	; 8
 2b2:	f1 e0       	ldi	r31, 0x01	; 1
 2b4:	80 81       	ld	r24, Z
 2b6:	8f 7d       	andi	r24, 0xDF	; 223
 2b8:	80 83       	st	Z, r24
			SET		(DD_B3);
 2ba:	80 81       	ld	r24, Z
 2bc:	80 61       	ori	r24, 0x10	; 16
 2be:	80 83       	st	Z, r24
 2c0:	08 95       	ret

000002c2 <_ZN5Motor9StopMotorEv>:

}

void Motor::StopMotor()
{
	switch(num)
 2c2:	fc 01       	movw	r30, r24
 2c4:	80 81       	ld	r24, Z
 2c6:	82 30       	cpi	r24, 0x02	; 2
 2c8:	89 f0       	breq	.+34     	; 0x2ec <_ZN5Motor9StopMotorEv+0x2a>
 2ca:	83 30       	cpi	r24, 0x03	; 3
 2cc:	e1 f0       	breq	.+56     	; 0x306 <_ZN5Motor9StopMotorEv+0x44>
 2ce:	81 30       	cpi	r24, 0x01	; 1
 2d0:	31 f5       	brne	.+76     	; 0x31e <_ZN5Motor9StopMotorEv+0x5c>
	{
		case 1:
			CLEAR	(DD_F1);
 2d2:	e8 e0       	ldi	r30, 0x08	; 8
 2d4:	f1 e0       	ldi	r31, 0x01	; 1
 2d6:	80 81       	ld	r24, Z
 2d8:	8d 7f       	andi	r24, 0xFD	; 253
 2da:	80 83       	st	Z, r24
			CLEAR	(DD_B1);
 2dc:	80 81       	ld	r24, Z
 2de:	8e 7f       	andi	r24, 0xFE	; 254
 2e0:	80 83       	st	Z, r24

			PWM_OCR1 = 0;
 2e2:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
 2e6:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
			break;
 2ea:	08 95       	ret
		case 2:
			CLEAR	(DD_F2);
 2ec:	e8 e0       	ldi	r30, 0x08	; 8
 2ee:	f1 e0       	ldi	r31, 0x01	; 1
 2f0:	80 81       	ld	r24, Z
 2f2:	8b 7f       	andi	r24, 0xFB	; 251
 2f4:	80 83       	st	Z, r24
			CLEAR	(DD_B2);
 2f6:	80 81       	ld	r24, Z
 2f8:	87 7f       	andi	r24, 0xF7	; 247
 2fa:	80 83       	st	Z, r24

			PWM_OCR2 = 0;
 2fc:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 300:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
			break;
 304:	08 95       	ret
		case 3:
			CLEAR	(DD_F3);
 306:	e8 e0       	ldi	r30, 0x08	; 8
 308:	f1 e0       	ldi	r31, 0x01	; 1
 30a:	80 81       	ld	r24, Z
 30c:	8f 7d       	andi	r24, 0xDF	; 223
 30e:	80 83       	st	Z, r24
			CLEAR	(DD_B3);
 310:	80 81       	ld	r24, Z
 312:	8f 7e       	andi	r24, 0xEF	; 239
 314:	80 83       	st	Z, r24

			PWM_OCR3 = 0;
 316:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
 31a:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
 31e:	08 95       	ret

00000320 <_ZN5Motor11SetOcrValueEi>:
	}
}


void Motor::SetOcrValue(int Ocr)
{
 320:	0f 93       	push	r16
 322:	1f 93       	push	r17
 324:	cf 93       	push	r28
 326:	df 93       	push	r29
 328:	8c 01       	movw	r16, r24
 32a:	eb 01       	movw	r28, r22
    if (Ocr > 0)
 32c:	1c 16       	cp	r1, r28
 32e:	1d 06       	cpc	r1, r29
 330:	0c f4       	brge	.+2      	; 0x334 <_ZN5Motor11SetOcrValueEi+0x14>
        SetForwardDirection();
 332:	81 df       	rcall	.-254    	; 0x236 <_ZN5Motor19SetForwardDirectionEv>
	if( Ocr >= MAX_VALUE)
 334:	c9 3f       	cpi	r28, 0xF9	; 249
 336:	d1 05       	cpc	r29, r1
 338:	44 f4       	brge	.+16     	; 0x34a <_ZN5Motor11SetOcrValueEi+0x2a>
		Ocr = MAX_VALUE;
	if( Ocr < 0)
 33a:	dd 23       	and	r29, r29
 33c:	44 f4       	brge	.+16     	; 0x34e <_ZN5Motor11SetOcrValueEi+0x2e>
	{
        Ocr = -Ocr;
 33e:	d1 95       	neg	r29
 340:	c1 95       	neg	r28
 342:	d1 09       	sbc	r29, r1
        SetReverseDirection();
 344:	c8 01       	movw	r24, r16
 346:	9a df       	rcall	.-204    	; 0x27c <_ZN5Motor19SetReverseDirectionEv>
 348:	02 c0       	rjmp	.+4      	; 0x34e <_ZN5Motor11SetOcrValueEi+0x2e>
void Motor::SetOcrValue(int Ocr)
{
    if (Ocr > 0)
        SetForwardDirection();
	if( Ocr >= MAX_VALUE)
		Ocr = MAX_VALUE;
 34a:	c9 ef       	ldi	r28, 0xF9	; 249
 34c:	d0 e0       	ldi	r29, 0x00	; 0
	if( Ocr < 0)
	{
        Ocr = -Ocr;
        SetReverseDirection();
	}
	switch(num)
 34e:	f8 01       	movw	r30, r16
 350:	80 81       	ld	r24, Z
 352:	82 30       	cpi	r24, 0x02	; 2
 354:	49 f0       	breq	.+18     	; 0x368 <_ZN5Motor11SetOcrValueEi+0x48>
 356:	83 30       	cpi	r24, 0x03	; 3
 358:	61 f0       	breq	.+24     	; 0x372 <_ZN5Motor11SetOcrValueEi+0x52>
 35a:	81 30       	cpi	r24, 0x01	; 1
 35c:	71 f4       	brne	.+28     	; 0x37a <_ZN5Motor11SetOcrValueEi+0x5a>
	{
		case 1:
			PWM_OCR1	= Ocr;
 35e:	d0 93 2d 01 	sts	0x012D, r29	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
 362:	c0 93 2c 01 	sts	0x012C, r28	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
			break;
 366:	09 c0       	rjmp	.+18     	; 0x37a <_ZN5Motor11SetOcrValueEi+0x5a>
		case 2:
			PWM_OCR2	= Ocr;
 368:	d0 93 29 01 	sts	0x0129, r29	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 36c:	c0 93 28 01 	sts	0x0128, r28	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
			break;
 370:	04 c0       	rjmp	.+8      	; 0x37a <_ZN5Motor11SetOcrValueEi+0x5a>
		case 3:
			PWM_OCR3	= Ocr;
 372:	d0 93 2b 01 	sts	0x012B, r29	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
 376:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
			break;
	}
}
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	1f 91       	pop	r17
 380:	0f 91       	pop	r16
 382:	08 95       	ret

00000384 <_ZN5Motor10InitialiseEh>:
#include "Motor.h"



void Motor::Initialise(uint8_t no)
{
 384:	cf 93       	push	r28
 386:	df 93       	push	r29
 388:	ec 01       	movw	r28, r24
	num = no;
 38a:	68 83       	st	Y, r22
	InitPWM();
 38c:	f2 de       	rcall	.-540    	; 0x172 <_ZN5Motor7InitPWMEv>

	StopMotor();
 38e:	ce 01       	movw	r24, r28
 390:	98 df       	rcall	.-208    	; 0x2c2 <_ZN5Motor9StopMotorEv>
	SetOcrValue(0);
 392:	60 e0       	ldi	r22, 0x00	; 0
 394:	70 e0       	ldi	r23, 0x00	; 0
 396:	ce 01       	movw	r24, r28
 398:	c3 df       	rcall	.-122    	; 0x320 <_ZN5Motor11SetOcrValueEi>

}
 39a:	df 91       	pop	r29
 39c:	cf 91       	pop	r28
 39e:	08 95       	ret

000003a0 <_Z9initUART0v>:

void UART3TransmitString(const char *s)
{
	while(*s)
	UART3Transmit(*s++);
}
 3a0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 3a4:	87 e6       	ldi	r24, 0x67	; 103
 3a6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 3aa:	88 e9       	ldi	r24, 0x98	; 152
 3ac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 3b0:	86 e0       	ldi	r24, 0x06	; 6
 3b2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 3b6:	08 95       	ret

000003b8 <_Z9initUART3v>:
 3b8:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <_ZL9datacount>
 3bc:	ea e2       	ldi	r30, 0x2A	; 42
 3be:	f2 e0       	ldi	r31, 0x02	; 2
 3c0:	11 82       	std	Z+1, r1	; 0x01
 3c2:	10 82       	st	Z, r1
 3c4:	13 82       	std	Z+3, r1	; 0x03
 3c6:	12 82       	std	Z+2, r1	; 0x02
 3c8:	15 82       	std	Z+5, r1	; 0x05
 3ca:	14 82       	std	Z+4, r1	; 0x04
 3cc:	17 82       	std	Z+7, r1	; 0x07
 3ce:	16 82       	std	Z+6, r1	; 0x06
 3d0:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <__TEXT_REGION_LENGTH__+0x700135>
 3d4:	87 e6       	ldi	r24, 0x67	; 103
 3d6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x700134>
 3da:	88 e9       	ldi	r24, 0x98	; 152
 3dc:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x700131>
 3e0:	86 e0       	ldi	r24, 0x06	; 6
 3e2:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x700132>
 3e6:	08 95       	ret

000003e8 <_Z13UART0Transmith>:
 3e8:	e0 ec       	ldi	r30, 0xC0	; 192
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	90 81       	ld	r25, Z
 3ee:	95 ff       	sbrs	r25, 5
 3f0:	fd cf       	rjmp	.-6      	; 0x3ec <_Z13UART0Transmith+0x4>
 3f2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 3f6:	08 95       	ret

000003f8 <_Z17UART0TransmitDatai>:
 3f8:	0f 93       	push	r16
 3fa:	1f 93       	push	r17
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
 400:	cd b7       	in	r28, 0x3d	; 61
 402:	de b7       	in	r29, 0x3e	; 62
 404:	64 97       	sbiw	r28, 0x14	; 20
 406:	0f b6       	in	r0, 0x3f	; 63
 408:	f8 94       	cli
 40a:	de bf       	out	0x3e, r29	; 62
 40c:	0f be       	out	0x3f, r0	; 63
 40e:	cd bf       	out	0x3d, r28	; 61
 410:	4a e0       	ldi	r20, 0x0A	; 10
 412:	be 01       	movw	r22, r28
 414:	6f 5f       	subi	r22, 0xFF	; 255
 416:	7f 4f       	sbci	r23, 0xFF	; 255
 418:	5f d4       	rcall	.+2238   	; 0xcd8 <__itoa_ncheck>
 41a:	89 81       	ldd	r24, Y+1	; 0x01
 41c:	88 23       	and	r24, r24
 41e:	49 f0       	breq	.+18     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 420:	8e 01       	movw	r16, r28
 422:	0e 5f       	subi	r16, 0xFE	; 254
 424:	1f 4f       	sbci	r17, 0xFF	; 255
 426:	e0 df       	rcall	.-64     	; 0x3e8 <_Z13UART0Transmith>
 428:	f8 01       	movw	r30, r16
 42a:	81 91       	ld	r24, Z+
 42c:	8f 01       	movw	r16, r30
 42e:	81 11       	cpse	r24, r1
 430:	fa cf       	rjmp	.-12     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 432:	64 96       	adiw	r28, 0x14	; 20
 434:	0f b6       	in	r0, 0x3f	; 63
 436:	f8 94       	cli
 438:	de bf       	out	0x3e, r29	; 62
 43a:	0f be       	out	0x3f, r0	; 63
 43c:	cd bf       	out	0x3d, r28	; 61
 43e:	df 91       	pop	r29
 440:	cf 91       	pop	r28
 442:	1f 91       	pop	r17
 444:	0f 91       	pop	r16
 446:	08 95       	ret

00000448 <_Z19UART0TransmitStringPKc>:
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
 44c:	ec 01       	movw	r28, r24
 44e:	88 81       	ld	r24, Y
 450:	88 23       	and	r24, r24
 452:	29 f0       	breq	.+10     	; 0x45e <_Z19UART0TransmitStringPKc+0x16>
 454:	21 96       	adiw	r28, 0x01	; 1
 456:	c8 df       	rcall	.-112    	; 0x3e8 <_Z13UART0Transmith>
 458:	89 91       	ld	r24, Y+
 45a:	81 11       	cpse	r24, r1
 45c:	fc cf       	rjmp	.-8      	; 0x456 <_Z19UART0TransmitStringPKc+0xe>
 45e:	df 91       	pop	r29
 460:	cf 91       	pop	r28
 462:	08 95       	ret

00000464 <__vector_25>:

ISR(USART0_RX_vect)
{
 464:	1f 92       	push	r1
 466:	0f 92       	push	r0
 468:	0f b6       	in	r0, 0x3f	; 63
 46a:	0f 92       	push	r0
 46c:	11 24       	eor	r1, r1
 46e:	8f 93       	push	r24
	buffer=UDR0;
 470:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 474:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <buffer>
}
 478:	8f 91       	pop	r24
 47a:	0f 90       	pop	r0
 47c:	0f be       	out	0x3f, r0	; 63
 47e:	0f 90       	pop	r0
 480:	1f 90       	pop	r1
 482:	18 95       	reti

00000484 <__vector_36>:

ISR(USART1_RX_vect)
{
 484:	1f 92       	push	r1
 486:	0f 92       	push	r0
 488:	0f b6       	in	r0, 0x3f	; 63
 48a:	0f 92       	push	r0
 48c:	11 24       	eor	r1, r1
 48e:	8f 93       	push	r24
	buffer1=UDR1;
 490:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 494:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <buffer1>
	
}
 498:	8f 91       	pop	r24
 49a:	0f 90       	pop	r0
 49c:	0f be       	out	0x3f, r0	; 63
 49e:	0f 90       	pop	r0
 4a0:	1f 90       	pop	r1
 4a2:	18 95       	reti

000004a4 <__vector_51>:

ISR(USART2_RX_vect)
{
 4a4:	1f 92       	push	r1
 4a6:	0f 92       	push	r0
 4a8:	0f b6       	in	r0, 0x3f	; 63
 4aa:	0f 92       	push	r0
 4ac:	11 24       	eor	r1, r1
 4ae:	8f 93       	push	r24
	buffer2=UDR2;
 4b0:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
 4b4:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <buffer2>
}
 4b8:	8f 91       	pop	r24
 4ba:	0f 90       	pop	r0
 4bc:	0f be       	out	0x3f, r0	; 63
 4be:	0f 90       	pop	r0
 4c0:	1f 90       	pop	r1
 4c2:	18 95       	reti

000004c4 <__vector_54>:


ISR(USART3_RX_vect)
{
 4c4:	1f 92       	push	r1
 4c6:	0f 92       	push	r0
 4c8:	0f b6       	in	r0, 0x3f	; 63
 4ca:	0f 92       	push	r0
 4cc:	11 24       	eor	r1, r1
 4ce:	0b b6       	in	r0, 0x3b	; 59
 4d0:	0f 92       	push	r0
 4d2:	2f 93       	push	r18
 4d4:	3f 93       	push	r19
 4d6:	8f 93       	push	r24
 4d8:	9f 93       	push	r25
 4da:	ef 93       	push	r30
 4dc:	ff 93       	push	r31
	buffer3=UDR3;
 4de:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 4e2:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <buffer3>
	
	if(rcvflag)
 4e6:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <__data_end>
 4ea:	99 23       	and	r25, r25
 4ec:	b1 f0       	breq	.+44     	; 0x51a <__vector_54+0x56>
	{
		rcvdata[datacount] = buffer3;
 4ee:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <_ZL9datacount>
 4f2:	e9 2f       	mov	r30, r25
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	ee 0f       	add	r30, r30
 4f8:	ff 1f       	adc	r31, r31
 4fa:	e6 5d       	subi	r30, 0xD6	; 214
 4fc:	fd 4f       	sbci	r31, 0xFD	; 253
 4fe:	28 2f       	mov	r18, r24
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	31 83       	std	Z+1, r19	; 0x01
 504:	20 83       	st	Z, r18
		datacount++;
 506:	9f 5f       	subi	r25, 0xFF	; 255
		if(datacount >= DATA_NOS)
 508:	94 30       	cpi	r25, 0x04	; 4
 50a:	18 f4       	brcc	.+6      	; 0x512 <__vector_54+0x4e>
	buffer3=UDR3;
	
	if(rcvflag)
	{
		rcvdata[datacount] = buffer3;
		datacount++;
 50c:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <_ZL9datacount>
 510:	04 c0       	rjmp	.+8      	; 0x51a <__vector_54+0x56>
		if(datacount >= DATA_NOS)
		{
			datacount=0;
 512:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <_ZL9datacount>
			rcvflag = false;
 516:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <__data_end>
		}
		
	}
	if(buffer3==START_BYTE)
 51a:	8f 37       	cpi	r24, 0x7F	; 127
 51c:	19 f4       	brne	.+6      	; 0x524 <__vector_54+0x60>
		rcvflag=true;
 51e:	81 e0       	ldi	r24, 0x01	; 1
 520:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <__data_end>
}
 524:	ff 91       	pop	r31
 526:	ef 91       	pop	r30
 528:	9f 91       	pop	r25
 52a:	8f 91       	pop	r24
 52c:	3f 91       	pop	r19
 52e:	2f 91       	pop	r18
 530:	0f 90       	pop	r0
 532:	0b be       	out	0x3b, r0	; 59
 534:	0f 90       	pop	r0
 536:	0f be       	out	0x3f, r0	; 63
 538:	0f 90       	pop	r0
 53a:	1f 90       	pop	r1
 53c:	18 95       	reti

0000053e <_ZN5Wheel4initEv>:
}

void Wheel::reset_robvel()
{
	for(int i=0;i<3;i++)
		velocity_robot[i] = 0;
 53e:	cf 93       	push	r28
 540:	df 93       	push	r29
 542:	ec 01       	movw	r28, r24
 544:	78 94       	sei
 546:	2c df       	rcall	.-424    	; 0x3a0 <_Z9initUART0v>
 548:	37 df       	rcall	.-402    	; 0x3b8 <_Z9initUART3v>
 54a:	84 e6       	ldi	r24, 0x64	; 100
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	9d 87       	std	Y+13, r25	; 0x0d
 550:	8c 87       	std	Y+12, r24	; 0x0c
 552:	fe 01       	movw	r30, r28
 554:	ce 01       	movw	r24, r28
 556:	0c 96       	adiw	r24, 0x0c	; 12
 558:	16 86       	std	Z+14, r1	; 0x0e
 55a:	17 86       	std	Z+15, r1	; 0x0f
 55c:	10 8a       	std	Z+16, r1	; 0x10
 55e:	11 8a       	std	Z+17, r1	; 0x11
 560:	11 92       	st	Z+, r1
 562:	11 92       	st	Z+, r1
 564:	11 92       	st	Z+, r1
 566:	11 92       	st	Z+, r1
 568:	e8 17       	cp	r30, r24
 56a:	f9 07       	cpc	r31, r25
 56c:	a9 f7       	brne	.-22     	; 0x558 <_ZN5Wheel4initEv+0x1a>
 56e:	61 e0       	ldi	r22, 0x01	; 1
 570:	ce 01       	movw	r24, r28
 572:	80 96       	adiw	r24, 0x20	; 32
 574:	07 df       	rcall	.-498    	; 0x384 <_ZN5Motor10InitialiseEh>
 576:	62 e0       	ldi	r22, 0x02	; 2
 578:	ce 01       	movw	r24, r28
 57a:	81 96       	adiw	r24, 0x21	; 33
 57c:	03 df       	rcall	.-506    	; 0x384 <_ZN5Motor10InitialiseEh>
 57e:	63 e0       	ldi	r22, 0x03	; 3
 580:	ce 01       	movw	r24, r28
 582:	82 96       	adiw	r24, 0x22	; 34
 584:	ff de       	rcall	.-514    	; 0x384 <_ZN5Motor10InitialiseEh>
 586:	df 91       	pop	r29
 588:	cf 91       	pop	r28
 58a:	08 95       	ret

0000058c <_ZN5Wheel15preprocess_dataEv>:
 58c:	ea e2       	ldi	r30, 0x2A	; 42
 58e:	f2 e0       	ldi	r31, 0x02	; 2
 590:	40 81       	ld	r20, Z
 592:	51 81       	ldd	r21, Z+1	; 0x01
 594:	22 81       	ldd	r18, Z+2	; 0x02
 596:	33 81       	ldd	r19, Z+3	; 0x03
 598:	42 17       	cp	r20, r18
 59a:	53 07       	cpc	r21, r19
 59c:	34 f0       	brlt	.+12     	; 0x5aa <_ZN5Wheel15preprocess_dataEv+0x1e>
 59e:	24 0f       	add	r18, r20
 5a0:	35 1f       	adc	r19, r21
 5a2:	fc 01       	movw	r30, r24
 5a4:	34 a3       	std	Z+36, r19	; 0x24
 5a6:	23 a3       	std	Z+35, r18	; 0x23
 5a8:	08 c0       	rjmp	.+16     	; 0x5ba <_ZN5Wheel15preprocess_dataEv+0x2e>
 5aa:	24 0f       	add	r18, r20
 5ac:	35 1f       	adc	r19, r21
 5ae:	31 95       	neg	r19
 5b0:	21 95       	neg	r18
 5b2:	31 09       	sbc	r19, r1
 5b4:	fc 01       	movw	r30, r24
 5b6:	34 a3       	std	Z+36, r19	; 0x24
 5b8:	23 a3       	std	Z+35, r18	; 0x23
 5ba:	ea e2       	ldi	r30, 0x2A	; 42
 5bc:	f2 e0       	ldi	r31, 0x02	; 2
 5be:	44 81       	ldd	r20, Z+4	; 0x04
 5c0:	55 81       	ldd	r21, Z+5	; 0x05
 5c2:	26 81       	ldd	r18, Z+6	; 0x06
 5c4:	37 81       	ldd	r19, Z+7	; 0x07
 5c6:	42 17       	cp	r20, r18
 5c8:	53 07       	cpc	r21, r19
 5ca:	34 f0       	brlt	.+12     	; 0x5d8 <_ZN5Wheel15preprocess_dataEv+0x4c>
 5cc:	24 0f       	add	r18, r20
 5ce:	35 1f       	adc	r19, r21
 5d0:	fc 01       	movw	r30, r24
 5d2:	36 a3       	std	Z+38, r19	; 0x26
 5d4:	25 a3       	std	Z+37, r18	; 0x25
 5d6:	08 95       	ret
 5d8:	24 0f       	add	r18, r20
 5da:	35 1f       	adc	r19, r21
 5dc:	31 95       	neg	r19
 5de:	21 95       	neg	r18
 5e0:	31 09       	sbc	r19, r1
 5e2:	fc 01       	movw	r30, r24
 5e4:	36 a3       	std	Z+38, r19	; 0x26
 5e6:	25 a3       	std	Z+37, r18	; 0x25
 5e8:	08 95       	ret

000005ea <_ZN5Wheel17get_joystick_dataEv>:
}

void Wheel::get_joystick_data()
{
 5ea:	4f 92       	push	r4
 5ec:	5f 92       	push	r5
 5ee:	6f 92       	push	r6
 5f0:	7f 92       	push	r7
 5f2:	af 92       	push	r10
 5f4:	bf 92       	push	r11
 5f6:	cf 92       	push	r12
 5f8:	df 92       	push	r13
 5fa:	ef 92       	push	r14
 5fc:	ff 92       	push	r15
 5fe:	0f 93       	push	r16
 600:	1f 93       	push	r17
 602:	cf 93       	push	r28
 604:	df 93       	push	r29
 606:	ec 01       	movw	r28, r24
			reset_robvel();
			break;
	}*/
	
	
	if(!rcvflag)
 608:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__data_end>
 60c:	81 11       	cpse	r24, r1
 60e:	02 c0       	rjmp	.+4      	; 0x614 <_ZN5Wheel17get_joystick_dataEv+0x2a>
		preprocess_data();
 610:	ce 01       	movw	r24, r28
 612:	bc df       	rcall	.-136    	; 0x58c <_ZN5Wheel15preprocess_dataEv>
	
	velocity_robot[1] = robot_rpm * cos(azimuth*(PI/180.0));
 614:	ac 84       	ldd	r10, Y+12	; 0x0c
 616:	bd 84       	ldd	r11, Y+13	; 0x0d
 618:	0b a1       	ldd	r16, Y+35	; 0x23
 61a:	1c a1       	ldd	r17, Y+36	; 0x24
 61c:	b8 01       	movw	r22, r16
 61e:	01 2e       	mov	r0, r17
 620:	00 0c       	add	r0, r0
 622:	88 0b       	sbc	r24, r24
 624:	99 0b       	sbc	r25, r25
 626:	e6 d1       	rcall	.+972    	; 0x9f4 <__floatsisf>
 628:	2e e2       	ldi	r18, 0x2E	; 46
 62a:	3a ef       	ldi	r19, 0xFA	; 250
 62c:	4e e8       	ldi	r20, 0x8E	; 142
 62e:	5c e3       	ldi	r21, 0x3C	; 60
 630:	a6 d2       	rcall	.+1356   	; 0xb7e <__mulsf3>
 632:	2b 01       	movw	r4, r22
 634:	3c 01       	movw	r6, r24
 636:	40 d1       	rcall	.+640    	; 0x8b8 <cos>
 638:	6b 01       	movw	r12, r22
 63a:	7c 01       	movw	r14, r24
 63c:	b5 01       	movw	r22, r10
 63e:	0b 2c       	mov	r0, r11
 640:	00 0c       	add	r0, r0
 642:	88 0b       	sbc	r24, r24
 644:	99 0b       	sbc	r25, r25
 646:	d6 d1       	rcall	.+940    	; 0x9f4 <__floatsisf>
 648:	a7 01       	movw	r20, r14
 64a:	96 01       	movw	r18, r12
 64c:	98 d2       	rcall	.+1328   	; 0xb7e <__mulsf3>
 64e:	6c 83       	std	Y+4, r22	; 0x04
 650:	7d 83       	std	Y+5, r23	; 0x05
 652:	8e 83       	std	Y+6, r24	; 0x06
 654:	9f 83       	std	Y+7, r25	; 0x07
	velocity_robot[0] = -robot_rpm * sin(azimuth*(PI/180.0));
 656:	c3 01       	movw	r24, r6
 658:	b2 01       	movw	r22, r4
 65a:	f4 d2       	rcall	.+1512   	; 0xc44 <sin>
 65c:	6b 01       	movw	r12, r22
 65e:	7c 01       	movw	r14, r24
 660:	66 27       	eor	r22, r22
 662:	77 27       	eor	r23, r23
 664:	6a 19       	sub	r22, r10
 666:	7b 09       	sbc	r23, r11
 668:	07 2e       	mov	r0, r23
 66a:	00 0c       	add	r0, r0
 66c:	88 0b       	sbc	r24, r24
 66e:	99 0b       	sbc	r25, r25
 670:	c1 d1       	rcall	.+898    	; 0x9f4 <__floatsisf>
 672:	a7 01       	movw	r20, r14
 674:	96 01       	movw	r18, r12
 676:	83 d2       	rcall	.+1286   	; 0xb7e <__mulsf3>
 678:	68 83       	st	Y, r22
 67a:	79 83       	std	Y+1, r23	; 0x01
 67c:	8a 83       	std	Y+2, r24	; 0x02
	
	UART0TransmitData(azimuth);
 67e:	9b 83       	std	Y+3, r25	; 0x03
 680:	c8 01       	movw	r24, r16
 682:	ba de       	rcall	.-652    	; 0x3f8 <_Z17UART0TransmitDatai>
	UART0Transmit('\t');
 684:	89 e0       	ldi	r24, 0x09	; 9
 686:	b0 de       	rcall	.-672    	; 0x3e8 <_Z13UART0Transmith>
	UART0TransmitData(elevation);
 688:	8d a1       	ldd	r24, Y+37	; 0x25
 68a:	9e a1       	ldd	r25, Y+38	; 0x26
	UART0Transmit('\t');
 68c:	b5 de       	rcall	.-662    	; 0x3f8 <_Z17UART0TransmitDatai>
 68e:	89 e0       	ldi	r24, 0x09	; 9
 690:	ab de       	rcall	.-682    	; 0x3e8 <_Z13UART0Transmith>
	UART0TransmitData(velocity_robot[0]);
 692:	68 81       	ld	r22, Y
 694:	79 81       	ldd	r23, Y+1	; 0x01
 696:	8a 81       	ldd	r24, Y+2	; 0x02
 698:	9b 81       	ldd	r25, Y+3	; 0x03
 69a:	79 d1       	rcall	.+754    	; 0x98e <__fixsfsi>
 69c:	cb 01       	movw	r24, r22
	UART0Transmit('\t');
 69e:	ac de       	rcall	.-680    	; 0x3f8 <_Z17UART0TransmitDatai>
 6a0:	89 e0       	ldi	r24, 0x09	; 9
 6a2:	a2 de       	rcall	.-700    	; 0x3e8 <_Z13UART0Transmith>
	UART0TransmitData(velocity_robot[1]);
 6a4:	6c 81       	ldd	r22, Y+4	; 0x04
 6a6:	7d 81       	ldd	r23, Y+5	; 0x05
 6a8:	8e 81       	ldd	r24, Y+6	; 0x06
 6aa:	9f 81       	ldd	r25, Y+7	; 0x07
 6ac:	70 d1       	rcall	.+736    	; 0x98e <__fixsfsi>
 6ae:	cb 01       	movw	r24, r22
 6b0:	a3 de       	rcall	.-698    	; 0x3f8 <_Z17UART0TransmitDatai>
 6b2:	84 e2       	ldi	r24, 0x24	; 36
 6b4:	92 e0       	ldi	r25, 0x02	; 2
	UART0TransmitString("\n\r");
 6b6:	c8 de       	rcall	.-624    	; 0x448 <_Z19UART0TransmitStringPKc>
 6b8:	df 91       	pop	r29
 6ba:	cf 91       	pop	r28
 6bc:	1f 91       	pop	r17
	
}
 6be:	0f 91       	pop	r16
 6c0:	ff 90       	pop	r15
 6c2:	ef 90       	pop	r14
 6c4:	df 90       	pop	r13
 6c6:	cf 90       	pop	r12
 6c8:	bf 90       	pop	r11
 6ca:	af 90       	pop	r10
 6cc:	7f 90       	pop	r7
 6ce:	6f 90       	pop	r6
 6d0:	5f 90       	pop	r5
 6d2:	4f 90       	pop	r4
 6d4:	08 95       	ret

000006d6 <_ZN5Wheel24calculate_wheel_velocityEv>:
 6d6:	4f 92       	push	r4
 6d8:	5f 92       	push	r5
 6da:	6f 92       	push	r6

void Wheel::calculate_wheel_velocity()
{
 6dc:	7f 92       	push	r7
 6de:	8f 92       	push	r8
 6e0:	9f 92       	push	r9
 6e2:	af 92       	push	r10
 6e4:	bf 92       	push	r11
 6e6:	cf 92       	push	r12
 6e8:	df 92       	push	r13
 6ea:	ef 92       	push	r14
 6ec:	ff 92       	push	r15
 6ee:	0f 93       	push	r16
 6f0:	1f 93       	push	r17
 6f2:	cf 93       	push	r28
 6f4:	df 93       	push	r29
 6f6:	3c 01       	movw	r6, r24
 6f8:	48 2e       	mov	r4, r24
 6fa:	57 2c       	mov	r5, r7
 6fc:	0f 2e       	mov	r0, r31
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	8f 2e       	mov	r8, r31
 702:	f2 e0       	ldi	r31, 0x02	; 2
 704:	9f 2e       	mov	r9, r31
 706:	f0 2d       	mov	r31, r0
 708:	5c 01       	movw	r10, r24
 70a:	8c e0       	ldi	r24, 0x0C	; 12
 70c:	a8 0e       	add	r10, r24
 70e:	b1 1c       	adc	r11, r1
 710:	63 01       	movw	r12, r6
 712:	76 01       	movw	r14, r12
	
    for(int i=0;i<3;i++)
    {
        velocity_motor[i] = 0;
 714:	f6 01       	movw	r30, r12
 716:	16 86       	std	Z+14, r1	; 0x0e
 718:	17 86       	std	Z+15, r1	; 0x0f
 71a:	10 8a       	std	Z+16, r1	; 0x10
 71c:	11 8a       	std	Z+17, r1	; 0x11
 71e:	84 01       	movw	r16, r8
 720:	c4 2d       	mov	r28, r4
 722:	d5 2d       	mov	r29, r5
        for(int j=0;j<3;j++)
        {
             velocity_motor[i] += velocity_robot[j] * coupling_matrix[i][j];
 724:	69 91       	ld	r22, Y+
 726:	79 91       	ld	r23, Y+
 728:	89 91       	ld	r24, Y+
 72a:	99 91       	ld	r25, Y+
 72c:	f8 01       	movw	r30, r16
 72e:	21 91       	ld	r18, Z+
 730:	31 91       	ld	r19, Z+
 732:	41 91       	ld	r20, Z+
 734:	51 91       	ld	r21, Z+
 736:	8f 01       	movw	r16, r30
 738:	22 d2       	rcall	.+1092   	; 0xb7e <__mulsf3>
 73a:	9b 01       	movw	r18, r22
 73c:	ac 01       	movw	r20, r24
 73e:	f7 01       	movw	r30, r14
 740:	66 85       	ldd	r22, Z+14	; 0x0e
 742:	77 85       	ldd	r23, Z+15	; 0x0f
 744:	80 89       	ldd	r24, Z+16	; 0x10
 746:	91 89       	ldd	r25, Z+17	; 0x11
 748:	53 d0       	rcall	.+166    	; 0x7f0 <__addsf3>
 74a:	f7 01       	movw	r30, r14
 74c:	66 87       	std	Z+14, r22	; 0x0e
 74e:	77 87       	std	Z+15, r23	; 0x0f
 750:	80 8b       	std	Z+16, r24	; 0x10
 752:	91 8b       	std	Z+17, r25	; 0x11
{
	
    for(int i=0;i<3;i++)
    {
        velocity_motor[i] = 0;
        for(int j=0;j<3;j++)
 754:	ca 15       	cp	r28, r10
 756:	db 05       	cpc	r29, r11
 758:	29 f7       	brne	.-54     	; 0x724 <_ZN5Wheel24calculate_wheel_velocityEv+0x4e>
 75a:	f4 e0       	ldi	r31, 0x04	; 4
 75c:	cf 0e       	add	r12, r31
 75e:	d1 1c       	adc	r13, r1
 760:	8c e0       	ldi	r24, 0x0C	; 12
 762:	88 0e       	add	r8, r24
 764:	91 1c       	adc	r9, r1
}

void Wheel::calculate_wheel_velocity()
{
	
    for(int i=0;i<3;i++)
 766:	ca 14       	cp	r12, r10
 768:	db 04       	cpc	r13, r11
 76a:	99 f6       	brne	.-90     	; 0x712 <_ZN5Wheel24calculate_wheel_velocityEv+0x3c>
 76c:	e3 01       	movw	r28, r6
 76e:	2e 96       	adiw	r28, 0x0e	; 14
 770:	ea e1       	ldi	r30, 0x1A	; 26
 772:	6e 0e       	add	r6, r30
 774:	71 1c       	adc	r7, r1
 776:	83 01       	movw	r16, r6
             velocity_motor[i] += velocity_robot[j] * coupling_matrix[i][j];
        }
    }
    for(int i=0;i<3;i++)
    {
        ocr_motor[i] = (249.0*velocity_motor[i]/(MAX_RPM));//multiply by icr_top value 
 778:	69 91       	ld	r22, Y+
 77a:	79 91       	ld	r23, Y+
 77c:	89 91       	ld	r24, Y+
 77e:	99 91       	ld	r25, Y+
 780:	20 e0       	ldi	r18, 0x00	; 0
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	49 e7       	ldi	r20, 0x79	; 121
 786:	53 e4       	ldi	r21, 0x43	; 67
 788:	fa d1       	rcall	.+1012   	; 0xb7e <__mulsf3>
 78a:	20 e0       	ldi	r18, 0x00	; 0
 78c:	30 e0       	ldi	r19, 0x00	; 0
 78e:	48 ec       	ldi	r20, 0xC8	; 200
 790:	53 e4       	ldi	r21, 0x43	; 67
 792:	95 d0       	rcall	.+298    	; 0x8be <__divsf3>
 794:	fc d0       	rcall	.+504    	; 0x98e <__fixsfsi>
 796:	f8 01       	movw	r30, r16
 798:	61 93       	st	Z+, r22
 79a:	71 93       	st	Z+, r23
 79c:	8f 01       	movw	r16, r30
        for(int j=0;j<3;j++)
        {
             velocity_motor[i] += velocity_robot[j] * coupling_matrix[i][j];
        }
    }
    for(int i=0;i<3;i++)
 79e:	c6 15       	cp	r28, r6
 7a0:	d7 05       	cpc	r29, r7
 7a2:	51 f7       	brne	.-44     	; 0x778 <_ZN5Wheel24calculate_wheel_velocityEv+0xa2>
    {
        ocr_motor[i] = (249.0*velocity_motor[i]/(MAX_RPM));//multiply by icr_top value 
    }
}
 7a4:	df 91       	pop	r29
 7a6:	cf 91       	pop	r28
 7a8:	1f 91       	pop	r17
 7aa:	0f 91       	pop	r16
 7ac:	ff 90       	pop	r15
 7ae:	ef 90       	pop	r14
 7b0:	df 90       	pop	r13
 7b2:	cf 90       	pop	r12
 7b4:	bf 90       	pop	r11
 7b6:	af 90       	pop	r10
 7b8:	9f 90       	pop	r9
 7ba:	8f 90       	pop	r8
 7bc:	7f 90       	pop	r7
 7be:	6f 90       	pop	r6
 7c0:	5f 90       	pop	r5
 7c2:	4f 90       	pop	r4
 7c4:	08 95       	ret

000007c6 <_ZN5Wheel21update_wheel_velocityEv>:

void Wheel::update_wheel_velocity()
{
 7c6:	cf 93       	push	r28
 7c8:	df 93       	push	r29
 7ca:	ec 01       	movw	r28, r24
    m1.SetOcrValue(ocr_motor[0]);
 7cc:	6a 8d       	ldd	r22, Y+26	; 0x1a
 7ce:	7b 8d       	ldd	r23, Y+27	; 0x1b
 7d0:	80 96       	adiw	r24, 0x20	; 32
 7d2:	a6 dd       	rcall	.-1204   	; 0x320 <_ZN5Motor11SetOcrValueEi>
    m2.SetOcrValue(ocr_motor[1]);
 7d4:	6c 8d       	ldd	r22, Y+28	; 0x1c
 7d6:	7d 8d       	ldd	r23, Y+29	; 0x1d
 7d8:	ce 01       	movw	r24, r28
 7da:	81 96       	adiw	r24, 0x21	; 33
 7dc:	a1 dd       	rcall	.-1214   	; 0x320 <_ZN5Motor11SetOcrValueEi>
    m3.SetOcrValue(ocr_motor[2]);
 7de:	6e 8d       	ldd	r22, Y+30	; 0x1e
 7e0:	7f 8d       	ldd	r23, Y+31	; 0x1f
 7e2:	ce 01       	movw	r24, r28
 7e4:	82 96       	adiw	r24, 0x22	; 34
 7e6:	9c dd       	rcall	.-1224   	; 0x320 <_ZN5Motor11SetOcrValueEi>
}
 7e8:	df 91       	pop	r29
 7ea:	cf 91       	pop	r28
 7ec:	08 95       	ret

000007ee <__subsf3>:
 7ee:	50 58       	subi	r21, 0x80	; 128

000007f0 <__addsf3>:
 7f0:	bb 27       	eor	r27, r27
 7f2:	aa 27       	eor	r26, r26
 7f4:	0e d0       	rcall	.+28     	; 0x812 <__addsf3x>
 7f6:	78 c1       	rjmp	.+752    	; 0xae8 <__fp_round>
 7f8:	41 d1       	rcall	.+642    	; 0xa7c <__fp_pscA>
 7fa:	30 f0       	brcs	.+12     	; 0x808 <__addsf3+0x18>
 7fc:	46 d1       	rcall	.+652    	; 0xa8a <__fp_pscB>
 7fe:	20 f0       	brcs	.+8      	; 0x808 <__addsf3+0x18>
 800:	31 f4       	brne	.+12     	; 0x80e <__addsf3+0x1e>
 802:	9f 3f       	cpi	r25, 0xFF	; 255
 804:	11 f4       	brne	.+4      	; 0x80a <__addsf3+0x1a>
 806:	1e f4       	brtc	.+6      	; 0x80e <__addsf3+0x1e>
 808:	36 c1       	rjmp	.+620    	; 0xa76 <__fp_nan>
 80a:	0e f4       	brtc	.+2      	; 0x80e <__addsf3+0x1e>
 80c:	e0 95       	com	r30
 80e:	e7 fb       	bst	r30, 7
 810:	2c c1       	rjmp	.+600    	; 0xa6a <__fp_inf>

00000812 <__addsf3x>:
 812:	e9 2f       	mov	r30, r25
 814:	8b d1       	rcall	.+790    	; 0xb2c <__fp_split3>
 816:	80 f3       	brcs	.-32     	; 0x7f8 <__addsf3+0x8>
 818:	ba 17       	cp	r27, r26
 81a:	62 07       	cpc	r22, r18
 81c:	73 07       	cpc	r23, r19
 81e:	84 07       	cpc	r24, r20
 820:	95 07       	cpc	r25, r21
 822:	18 f0       	brcs	.+6      	; 0x82a <__addsf3x+0x18>
 824:	71 f4       	brne	.+28     	; 0x842 <__addsf3x+0x30>
 826:	9e f5       	brtc	.+102    	; 0x88e <__addsf3x+0x7c>
 828:	a3 c1       	rjmp	.+838    	; 0xb70 <__fp_zero>
 82a:	0e f4       	brtc	.+2      	; 0x82e <__addsf3x+0x1c>
 82c:	e0 95       	com	r30
 82e:	0b 2e       	mov	r0, r27
 830:	ba 2f       	mov	r27, r26
 832:	a0 2d       	mov	r26, r0
 834:	0b 01       	movw	r0, r22
 836:	b9 01       	movw	r22, r18
 838:	90 01       	movw	r18, r0
 83a:	0c 01       	movw	r0, r24
 83c:	ca 01       	movw	r24, r20
 83e:	a0 01       	movw	r20, r0
 840:	11 24       	eor	r1, r1
 842:	ff 27       	eor	r31, r31
 844:	59 1b       	sub	r21, r25
 846:	99 f0       	breq	.+38     	; 0x86e <__addsf3x+0x5c>
 848:	59 3f       	cpi	r21, 0xF9	; 249
 84a:	50 f4       	brcc	.+20     	; 0x860 <__addsf3x+0x4e>
 84c:	50 3e       	cpi	r21, 0xE0	; 224
 84e:	68 f1       	brcs	.+90     	; 0x8aa <__addsf3x+0x98>
 850:	1a 16       	cp	r1, r26
 852:	f0 40       	sbci	r31, 0x00	; 0
 854:	a2 2f       	mov	r26, r18
 856:	23 2f       	mov	r18, r19
 858:	34 2f       	mov	r19, r20
 85a:	44 27       	eor	r20, r20
 85c:	58 5f       	subi	r21, 0xF8	; 248
 85e:	f3 cf       	rjmp	.-26     	; 0x846 <__addsf3x+0x34>
 860:	46 95       	lsr	r20
 862:	37 95       	ror	r19
 864:	27 95       	ror	r18
 866:	a7 95       	ror	r26
 868:	f0 40       	sbci	r31, 0x00	; 0
 86a:	53 95       	inc	r21
 86c:	c9 f7       	brne	.-14     	; 0x860 <__addsf3x+0x4e>
 86e:	7e f4       	brtc	.+30     	; 0x88e <__addsf3x+0x7c>
 870:	1f 16       	cp	r1, r31
 872:	ba 0b       	sbc	r27, r26
 874:	62 0b       	sbc	r22, r18
 876:	73 0b       	sbc	r23, r19
 878:	84 0b       	sbc	r24, r20
 87a:	ba f0       	brmi	.+46     	; 0x8aa <__addsf3x+0x98>
 87c:	91 50       	subi	r25, 0x01	; 1
 87e:	a1 f0       	breq	.+40     	; 0x8a8 <__addsf3x+0x96>
 880:	ff 0f       	add	r31, r31
 882:	bb 1f       	adc	r27, r27
 884:	66 1f       	adc	r22, r22
 886:	77 1f       	adc	r23, r23
 888:	88 1f       	adc	r24, r24
 88a:	c2 f7       	brpl	.-16     	; 0x87c <__addsf3x+0x6a>
 88c:	0e c0       	rjmp	.+28     	; 0x8aa <__addsf3x+0x98>
 88e:	ba 0f       	add	r27, r26
 890:	62 1f       	adc	r22, r18
 892:	73 1f       	adc	r23, r19
 894:	84 1f       	adc	r24, r20
 896:	48 f4       	brcc	.+18     	; 0x8aa <__addsf3x+0x98>
 898:	87 95       	ror	r24
 89a:	77 95       	ror	r23
 89c:	67 95       	ror	r22
 89e:	b7 95       	ror	r27
 8a0:	f7 95       	ror	r31
 8a2:	9e 3f       	cpi	r25, 0xFE	; 254
 8a4:	08 f0       	brcs	.+2      	; 0x8a8 <__addsf3x+0x96>
 8a6:	b3 cf       	rjmp	.-154    	; 0x80e <__addsf3+0x1e>
 8a8:	93 95       	inc	r25
 8aa:	88 0f       	add	r24, r24
 8ac:	08 f0       	brcs	.+2      	; 0x8b0 <__addsf3x+0x9e>
 8ae:	99 27       	eor	r25, r25
 8b0:	ee 0f       	add	r30, r30
 8b2:	97 95       	ror	r25
 8b4:	87 95       	ror	r24
 8b6:	08 95       	ret

000008b8 <cos>:
 8b8:	f0 d0       	rcall	.+480    	; 0xa9a <__fp_rempio2>
 8ba:	e3 95       	inc	r30
 8bc:	26 c1       	rjmp	.+588    	; 0xb0a <__fp_sinus>

000008be <__divsf3>:
 8be:	0c d0       	rcall	.+24     	; 0x8d8 <__divsf3x>
 8c0:	13 c1       	rjmp	.+550    	; 0xae8 <__fp_round>
 8c2:	e3 d0       	rcall	.+454    	; 0xa8a <__fp_pscB>
 8c4:	40 f0       	brcs	.+16     	; 0x8d6 <__divsf3+0x18>
 8c6:	da d0       	rcall	.+436    	; 0xa7c <__fp_pscA>
 8c8:	30 f0       	brcs	.+12     	; 0x8d6 <__divsf3+0x18>
 8ca:	21 f4       	brne	.+8      	; 0x8d4 <__divsf3+0x16>
 8cc:	5f 3f       	cpi	r21, 0xFF	; 255
 8ce:	19 f0       	breq	.+6      	; 0x8d6 <__divsf3+0x18>
 8d0:	cc c0       	rjmp	.+408    	; 0xa6a <__fp_inf>
 8d2:	51 11       	cpse	r21, r1
 8d4:	4e c1       	rjmp	.+668    	; 0xb72 <__fp_szero>
 8d6:	cf c0       	rjmp	.+414    	; 0xa76 <__fp_nan>

000008d8 <__divsf3x>:
 8d8:	29 d1       	rcall	.+594    	; 0xb2c <__fp_split3>
 8da:	98 f3       	brcs	.-26     	; 0x8c2 <__divsf3+0x4>

000008dc <__divsf3_pse>:
 8dc:	99 23       	and	r25, r25
 8de:	c9 f3       	breq	.-14     	; 0x8d2 <__divsf3+0x14>
 8e0:	55 23       	and	r21, r21
 8e2:	b1 f3       	breq	.-20     	; 0x8d0 <__divsf3+0x12>
 8e4:	95 1b       	sub	r25, r21
 8e6:	55 0b       	sbc	r21, r21
 8e8:	bb 27       	eor	r27, r27
 8ea:	aa 27       	eor	r26, r26
 8ec:	62 17       	cp	r22, r18
 8ee:	73 07       	cpc	r23, r19
 8f0:	84 07       	cpc	r24, r20
 8f2:	38 f0       	brcs	.+14     	; 0x902 <__divsf3_pse+0x26>
 8f4:	9f 5f       	subi	r25, 0xFF	; 255
 8f6:	5f 4f       	sbci	r21, 0xFF	; 255
 8f8:	22 0f       	add	r18, r18
 8fa:	33 1f       	adc	r19, r19
 8fc:	44 1f       	adc	r20, r20
 8fe:	aa 1f       	adc	r26, r26
 900:	a9 f3       	breq	.-22     	; 0x8ec <__divsf3_pse+0x10>
 902:	33 d0       	rcall	.+102    	; 0x96a <__divsf3_pse+0x8e>
 904:	0e 2e       	mov	r0, r30
 906:	3a f0       	brmi	.+14     	; 0x916 <__divsf3_pse+0x3a>
 908:	e0 e8       	ldi	r30, 0x80	; 128
 90a:	30 d0       	rcall	.+96     	; 0x96c <__divsf3_pse+0x90>
 90c:	91 50       	subi	r25, 0x01	; 1
 90e:	50 40       	sbci	r21, 0x00	; 0
 910:	e6 95       	lsr	r30
 912:	00 1c       	adc	r0, r0
 914:	ca f7       	brpl	.-14     	; 0x908 <__divsf3_pse+0x2c>
 916:	29 d0       	rcall	.+82     	; 0x96a <__divsf3_pse+0x8e>
 918:	fe 2f       	mov	r31, r30
 91a:	27 d0       	rcall	.+78     	; 0x96a <__divsf3_pse+0x8e>
 91c:	66 0f       	add	r22, r22
 91e:	77 1f       	adc	r23, r23
 920:	88 1f       	adc	r24, r24
 922:	bb 1f       	adc	r27, r27
 924:	26 17       	cp	r18, r22
 926:	37 07       	cpc	r19, r23
 928:	48 07       	cpc	r20, r24
 92a:	ab 07       	cpc	r26, r27
 92c:	b0 e8       	ldi	r27, 0x80	; 128
 92e:	09 f0       	breq	.+2      	; 0x932 <__divsf3_pse+0x56>
 930:	bb 0b       	sbc	r27, r27
 932:	80 2d       	mov	r24, r0
 934:	bf 01       	movw	r22, r30
 936:	ff 27       	eor	r31, r31
 938:	93 58       	subi	r25, 0x83	; 131
 93a:	5f 4f       	sbci	r21, 0xFF	; 255
 93c:	2a f0       	brmi	.+10     	; 0x948 <__divsf3_pse+0x6c>
 93e:	9e 3f       	cpi	r25, 0xFE	; 254
 940:	51 05       	cpc	r21, r1
 942:	68 f0       	brcs	.+26     	; 0x95e <__divsf3_pse+0x82>
 944:	92 c0       	rjmp	.+292    	; 0xa6a <__fp_inf>
 946:	15 c1       	rjmp	.+554    	; 0xb72 <__fp_szero>
 948:	5f 3f       	cpi	r21, 0xFF	; 255
 94a:	ec f3       	brlt	.-6      	; 0x946 <__divsf3_pse+0x6a>
 94c:	98 3e       	cpi	r25, 0xE8	; 232
 94e:	dc f3       	brlt	.-10     	; 0x946 <__divsf3_pse+0x6a>
 950:	86 95       	lsr	r24
 952:	77 95       	ror	r23
 954:	67 95       	ror	r22
 956:	b7 95       	ror	r27
 958:	f7 95       	ror	r31
 95a:	9f 5f       	subi	r25, 0xFF	; 255
 95c:	c9 f7       	brne	.-14     	; 0x950 <__divsf3_pse+0x74>
 95e:	88 0f       	add	r24, r24
 960:	91 1d       	adc	r25, r1
 962:	96 95       	lsr	r25
 964:	87 95       	ror	r24
 966:	97 f9       	bld	r25, 7
 968:	08 95       	ret
 96a:	e1 e0       	ldi	r30, 0x01	; 1
 96c:	66 0f       	add	r22, r22
 96e:	77 1f       	adc	r23, r23
 970:	88 1f       	adc	r24, r24
 972:	bb 1f       	adc	r27, r27
 974:	62 17       	cp	r22, r18
 976:	73 07       	cpc	r23, r19
 978:	84 07       	cpc	r24, r20
 97a:	ba 07       	cpc	r27, r26
 97c:	20 f0       	brcs	.+8      	; 0x986 <__divsf3_pse+0xaa>
 97e:	62 1b       	sub	r22, r18
 980:	73 0b       	sbc	r23, r19
 982:	84 0b       	sbc	r24, r20
 984:	ba 0b       	sbc	r27, r26
 986:	ee 1f       	adc	r30, r30
 988:	88 f7       	brcc	.-30     	; 0x96c <__divsf3_pse+0x90>
 98a:	e0 95       	com	r30
 98c:	08 95       	ret

0000098e <__fixsfsi>:
 98e:	04 d0       	rcall	.+8      	; 0x998 <__fixunssfsi>
 990:	68 94       	set
 992:	b1 11       	cpse	r27, r1
 994:	ee c0       	rjmp	.+476    	; 0xb72 <__fp_szero>
 996:	08 95       	ret

00000998 <__fixunssfsi>:
 998:	d1 d0       	rcall	.+418    	; 0xb3c <__fp_splitA>
 99a:	88 f0       	brcs	.+34     	; 0x9be <__fixunssfsi+0x26>
 99c:	9f 57       	subi	r25, 0x7F	; 127
 99e:	90 f0       	brcs	.+36     	; 0x9c4 <__fixunssfsi+0x2c>
 9a0:	b9 2f       	mov	r27, r25
 9a2:	99 27       	eor	r25, r25
 9a4:	b7 51       	subi	r27, 0x17	; 23
 9a6:	a0 f0       	brcs	.+40     	; 0x9d0 <__fixunssfsi+0x38>
 9a8:	d1 f0       	breq	.+52     	; 0x9de <__fixunssfsi+0x46>
 9aa:	66 0f       	add	r22, r22
 9ac:	77 1f       	adc	r23, r23
 9ae:	88 1f       	adc	r24, r24
 9b0:	99 1f       	adc	r25, r25
 9b2:	1a f0       	brmi	.+6      	; 0x9ba <__fixunssfsi+0x22>
 9b4:	ba 95       	dec	r27
 9b6:	c9 f7       	brne	.-14     	; 0x9aa <__fixunssfsi+0x12>
 9b8:	12 c0       	rjmp	.+36     	; 0x9de <__fixunssfsi+0x46>
 9ba:	b1 30       	cpi	r27, 0x01	; 1
 9bc:	81 f0       	breq	.+32     	; 0x9de <__fixunssfsi+0x46>
 9be:	d8 d0       	rcall	.+432    	; 0xb70 <__fp_zero>
 9c0:	b1 e0       	ldi	r27, 0x01	; 1
 9c2:	08 95       	ret
 9c4:	d5 c0       	rjmp	.+426    	; 0xb70 <__fp_zero>
 9c6:	67 2f       	mov	r22, r23
 9c8:	78 2f       	mov	r23, r24
 9ca:	88 27       	eor	r24, r24
 9cc:	b8 5f       	subi	r27, 0xF8	; 248
 9ce:	39 f0       	breq	.+14     	; 0x9de <__fixunssfsi+0x46>
 9d0:	b9 3f       	cpi	r27, 0xF9	; 249
 9d2:	cc f3       	brlt	.-14     	; 0x9c6 <__fixunssfsi+0x2e>
 9d4:	86 95       	lsr	r24
 9d6:	77 95       	ror	r23
 9d8:	67 95       	ror	r22
 9da:	b3 95       	inc	r27
 9dc:	d9 f7       	brne	.-10     	; 0x9d4 <__fixunssfsi+0x3c>
 9de:	3e f4       	brtc	.+14     	; 0x9ee <__fixunssfsi+0x56>
 9e0:	90 95       	com	r25
 9e2:	80 95       	com	r24
 9e4:	70 95       	com	r23
 9e6:	61 95       	neg	r22
 9e8:	7f 4f       	sbci	r23, 0xFF	; 255
 9ea:	8f 4f       	sbci	r24, 0xFF	; 255
 9ec:	9f 4f       	sbci	r25, 0xFF	; 255
 9ee:	08 95       	ret

000009f0 <__floatunsisf>:
 9f0:	e8 94       	clt
 9f2:	09 c0       	rjmp	.+18     	; 0xa06 <__floatsisf+0x12>

000009f4 <__floatsisf>:
 9f4:	97 fb       	bst	r25, 7
 9f6:	3e f4       	brtc	.+14     	; 0xa06 <__floatsisf+0x12>
 9f8:	90 95       	com	r25
 9fa:	80 95       	com	r24
 9fc:	70 95       	com	r23
 9fe:	61 95       	neg	r22
 a00:	7f 4f       	sbci	r23, 0xFF	; 255
 a02:	8f 4f       	sbci	r24, 0xFF	; 255
 a04:	9f 4f       	sbci	r25, 0xFF	; 255
 a06:	99 23       	and	r25, r25
 a08:	a9 f0       	breq	.+42     	; 0xa34 <__floatsisf+0x40>
 a0a:	f9 2f       	mov	r31, r25
 a0c:	96 e9       	ldi	r25, 0x96	; 150
 a0e:	bb 27       	eor	r27, r27
 a10:	93 95       	inc	r25
 a12:	f6 95       	lsr	r31
 a14:	87 95       	ror	r24
 a16:	77 95       	ror	r23
 a18:	67 95       	ror	r22
 a1a:	b7 95       	ror	r27
 a1c:	f1 11       	cpse	r31, r1
 a1e:	f8 cf       	rjmp	.-16     	; 0xa10 <__floatsisf+0x1c>
 a20:	fa f4       	brpl	.+62     	; 0xa60 <__floatsisf+0x6c>
 a22:	bb 0f       	add	r27, r27
 a24:	11 f4       	brne	.+4      	; 0xa2a <__floatsisf+0x36>
 a26:	60 ff       	sbrs	r22, 0
 a28:	1b c0       	rjmp	.+54     	; 0xa60 <__floatsisf+0x6c>
 a2a:	6f 5f       	subi	r22, 0xFF	; 255
 a2c:	7f 4f       	sbci	r23, 0xFF	; 255
 a2e:	8f 4f       	sbci	r24, 0xFF	; 255
 a30:	9f 4f       	sbci	r25, 0xFF	; 255
 a32:	16 c0       	rjmp	.+44     	; 0xa60 <__floatsisf+0x6c>
 a34:	88 23       	and	r24, r24
 a36:	11 f0       	breq	.+4      	; 0xa3c <__floatsisf+0x48>
 a38:	96 e9       	ldi	r25, 0x96	; 150
 a3a:	11 c0       	rjmp	.+34     	; 0xa5e <__floatsisf+0x6a>
 a3c:	77 23       	and	r23, r23
 a3e:	21 f0       	breq	.+8      	; 0xa48 <__floatsisf+0x54>
 a40:	9e e8       	ldi	r25, 0x8E	; 142
 a42:	87 2f       	mov	r24, r23
 a44:	76 2f       	mov	r23, r22
 a46:	05 c0       	rjmp	.+10     	; 0xa52 <__floatsisf+0x5e>
 a48:	66 23       	and	r22, r22
 a4a:	71 f0       	breq	.+28     	; 0xa68 <__floatsisf+0x74>
 a4c:	96 e8       	ldi	r25, 0x86	; 134
 a4e:	86 2f       	mov	r24, r22
 a50:	70 e0       	ldi	r23, 0x00	; 0
 a52:	60 e0       	ldi	r22, 0x00	; 0
 a54:	2a f0       	brmi	.+10     	; 0xa60 <__floatsisf+0x6c>
 a56:	9a 95       	dec	r25
 a58:	66 0f       	add	r22, r22
 a5a:	77 1f       	adc	r23, r23
 a5c:	88 1f       	adc	r24, r24
 a5e:	da f7       	brpl	.-10     	; 0xa56 <__floatsisf+0x62>
 a60:	88 0f       	add	r24, r24
 a62:	96 95       	lsr	r25
 a64:	87 95       	ror	r24
 a66:	97 f9       	bld	r25, 7
 a68:	08 95       	ret

00000a6a <__fp_inf>:
 a6a:	97 f9       	bld	r25, 7
 a6c:	9f 67       	ori	r25, 0x7F	; 127
 a6e:	80 e8       	ldi	r24, 0x80	; 128
 a70:	70 e0       	ldi	r23, 0x00	; 0
 a72:	60 e0       	ldi	r22, 0x00	; 0
 a74:	08 95       	ret

00000a76 <__fp_nan>:
 a76:	9f ef       	ldi	r25, 0xFF	; 255
 a78:	80 ec       	ldi	r24, 0xC0	; 192
 a7a:	08 95       	ret

00000a7c <__fp_pscA>:
 a7c:	00 24       	eor	r0, r0
 a7e:	0a 94       	dec	r0
 a80:	16 16       	cp	r1, r22
 a82:	17 06       	cpc	r1, r23
 a84:	18 06       	cpc	r1, r24
 a86:	09 06       	cpc	r0, r25
 a88:	08 95       	ret

00000a8a <__fp_pscB>:
 a8a:	00 24       	eor	r0, r0
 a8c:	0a 94       	dec	r0
 a8e:	12 16       	cp	r1, r18
 a90:	13 06       	cpc	r1, r19
 a92:	14 06       	cpc	r1, r20
 a94:	05 06       	cpc	r0, r21
 a96:	08 95       	ret
 a98:	ee cf       	rjmp	.-36     	; 0xa76 <__fp_nan>

00000a9a <__fp_rempio2>:
 a9a:	50 d0       	rcall	.+160    	; 0xb3c <__fp_splitA>
 a9c:	e8 f3       	brcs	.-6      	; 0xa98 <__fp_pscB+0xe>
 a9e:	e8 94       	clt
 aa0:	e0 e0       	ldi	r30, 0x00	; 0
 aa2:	bb 27       	eor	r27, r27
 aa4:	9f 57       	subi	r25, 0x7F	; 127
 aa6:	f0 f0       	brcs	.+60     	; 0xae4 <__fp_rempio2+0x4a>
 aa8:	2a ed       	ldi	r18, 0xDA	; 218
 aaa:	3f e0       	ldi	r19, 0x0F	; 15
 aac:	49 ec       	ldi	r20, 0xC9	; 201
 aae:	06 c0       	rjmp	.+12     	; 0xabc <__fp_rempio2+0x22>
 ab0:	ee 0f       	add	r30, r30
 ab2:	bb 0f       	add	r27, r27
 ab4:	66 1f       	adc	r22, r22
 ab6:	77 1f       	adc	r23, r23
 ab8:	88 1f       	adc	r24, r24
 aba:	28 f0       	brcs	.+10     	; 0xac6 <__fp_rempio2+0x2c>
 abc:	b2 3a       	cpi	r27, 0xA2	; 162
 abe:	62 07       	cpc	r22, r18
 ac0:	73 07       	cpc	r23, r19
 ac2:	84 07       	cpc	r24, r20
 ac4:	28 f0       	brcs	.+10     	; 0xad0 <__fp_rempio2+0x36>
 ac6:	b2 5a       	subi	r27, 0xA2	; 162
 ac8:	62 0b       	sbc	r22, r18
 aca:	73 0b       	sbc	r23, r19
 acc:	84 0b       	sbc	r24, r20
 ace:	e3 95       	inc	r30
 ad0:	9a 95       	dec	r25
 ad2:	72 f7       	brpl	.-36     	; 0xab0 <__fp_rempio2+0x16>
 ad4:	80 38       	cpi	r24, 0x80	; 128
 ad6:	30 f4       	brcc	.+12     	; 0xae4 <__fp_rempio2+0x4a>
 ad8:	9a 95       	dec	r25
 ada:	bb 0f       	add	r27, r27
 adc:	66 1f       	adc	r22, r22
 ade:	77 1f       	adc	r23, r23
 ae0:	88 1f       	adc	r24, r24
 ae2:	d2 f7       	brpl	.-12     	; 0xad8 <__fp_rempio2+0x3e>
 ae4:	90 48       	sbci	r25, 0x80	; 128
 ae6:	b6 c0       	rjmp	.+364    	; 0xc54 <__fp_mpack_finite>

00000ae8 <__fp_round>:
 ae8:	09 2e       	mov	r0, r25
 aea:	03 94       	inc	r0
 aec:	00 0c       	add	r0, r0
 aee:	11 f4       	brne	.+4      	; 0xaf4 <__fp_round+0xc>
 af0:	88 23       	and	r24, r24
 af2:	52 f0       	brmi	.+20     	; 0xb08 <__fp_round+0x20>
 af4:	bb 0f       	add	r27, r27
 af6:	40 f4       	brcc	.+16     	; 0xb08 <__fp_round+0x20>
 af8:	bf 2b       	or	r27, r31
 afa:	11 f4       	brne	.+4      	; 0xb00 <__fp_round+0x18>
 afc:	60 ff       	sbrs	r22, 0
 afe:	04 c0       	rjmp	.+8      	; 0xb08 <__fp_round+0x20>
 b00:	6f 5f       	subi	r22, 0xFF	; 255
 b02:	7f 4f       	sbci	r23, 0xFF	; 255
 b04:	8f 4f       	sbci	r24, 0xFF	; 255
 b06:	9f 4f       	sbci	r25, 0xFF	; 255
 b08:	08 95       	ret

00000b0a <__fp_sinus>:
 b0a:	ef 93       	push	r30
 b0c:	e0 ff       	sbrs	r30, 0
 b0e:	06 c0       	rjmp	.+12     	; 0xb1c <__fp_sinus+0x12>
 b10:	a2 ea       	ldi	r26, 0xA2	; 162
 b12:	2a ed       	ldi	r18, 0xDA	; 218
 b14:	3f e0       	ldi	r19, 0x0F	; 15
 b16:	49 ec       	ldi	r20, 0xC9	; 201
 b18:	5f eb       	ldi	r21, 0xBF	; 191
 b1a:	7b de       	rcall	.-778    	; 0x812 <__addsf3x>
 b1c:	e5 df       	rcall	.-54     	; 0xae8 <__fp_round>
 b1e:	0f 90       	pop	r0
 b20:	03 94       	inc	r0
 b22:	01 fc       	sbrc	r0, 1
 b24:	90 58       	subi	r25, 0x80	; 128
 b26:	e4 ee       	ldi	r30, 0xE4	; 228
 b28:	f0 e0       	ldi	r31, 0x00	; 0
 b2a:	a0 c0       	rjmp	.+320    	; 0xc6c <__fp_powsodd>

00000b2c <__fp_split3>:
 b2c:	57 fd       	sbrc	r21, 7
 b2e:	90 58       	subi	r25, 0x80	; 128
 b30:	44 0f       	add	r20, r20
 b32:	55 1f       	adc	r21, r21
 b34:	59 f0       	breq	.+22     	; 0xb4c <__fp_splitA+0x10>
 b36:	5f 3f       	cpi	r21, 0xFF	; 255
 b38:	71 f0       	breq	.+28     	; 0xb56 <__fp_splitA+0x1a>
 b3a:	47 95       	ror	r20

00000b3c <__fp_splitA>:
 b3c:	88 0f       	add	r24, r24
 b3e:	97 fb       	bst	r25, 7
 b40:	99 1f       	adc	r25, r25
 b42:	61 f0       	breq	.+24     	; 0xb5c <__fp_splitA+0x20>
 b44:	9f 3f       	cpi	r25, 0xFF	; 255
 b46:	79 f0       	breq	.+30     	; 0xb66 <__fp_splitA+0x2a>
 b48:	87 95       	ror	r24
 b4a:	08 95       	ret
 b4c:	12 16       	cp	r1, r18
 b4e:	13 06       	cpc	r1, r19
 b50:	14 06       	cpc	r1, r20
 b52:	55 1f       	adc	r21, r21
 b54:	f2 cf       	rjmp	.-28     	; 0xb3a <__fp_split3+0xe>
 b56:	46 95       	lsr	r20
 b58:	f1 df       	rcall	.-30     	; 0xb3c <__fp_splitA>
 b5a:	08 c0       	rjmp	.+16     	; 0xb6c <__fp_splitA+0x30>
 b5c:	16 16       	cp	r1, r22
 b5e:	17 06       	cpc	r1, r23
 b60:	18 06       	cpc	r1, r24
 b62:	99 1f       	adc	r25, r25
 b64:	f1 cf       	rjmp	.-30     	; 0xb48 <__fp_splitA+0xc>
 b66:	86 95       	lsr	r24
 b68:	71 05       	cpc	r23, r1
 b6a:	61 05       	cpc	r22, r1
 b6c:	08 94       	sec
 b6e:	08 95       	ret

00000b70 <__fp_zero>:
 b70:	e8 94       	clt

00000b72 <__fp_szero>:
 b72:	bb 27       	eor	r27, r27
 b74:	66 27       	eor	r22, r22
 b76:	77 27       	eor	r23, r23
 b78:	cb 01       	movw	r24, r22
 b7a:	97 f9       	bld	r25, 7
 b7c:	08 95       	ret

00000b7e <__mulsf3>:
 b7e:	0b d0       	rcall	.+22     	; 0xb96 <__mulsf3x>
 b80:	b3 cf       	rjmp	.-154    	; 0xae8 <__fp_round>
 b82:	7c df       	rcall	.-264    	; 0xa7c <__fp_pscA>
 b84:	28 f0       	brcs	.+10     	; 0xb90 <__mulsf3+0x12>
 b86:	81 df       	rcall	.-254    	; 0xa8a <__fp_pscB>
 b88:	18 f0       	brcs	.+6      	; 0xb90 <__mulsf3+0x12>
 b8a:	95 23       	and	r25, r21
 b8c:	09 f0       	breq	.+2      	; 0xb90 <__mulsf3+0x12>
 b8e:	6d cf       	rjmp	.-294    	; 0xa6a <__fp_inf>
 b90:	72 cf       	rjmp	.-284    	; 0xa76 <__fp_nan>
 b92:	11 24       	eor	r1, r1
 b94:	ee cf       	rjmp	.-36     	; 0xb72 <__fp_szero>

00000b96 <__mulsf3x>:
 b96:	ca df       	rcall	.-108    	; 0xb2c <__fp_split3>
 b98:	a0 f3       	brcs	.-24     	; 0xb82 <__mulsf3+0x4>

00000b9a <__mulsf3_pse>:
 b9a:	95 9f       	mul	r25, r21
 b9c:	d1 f3       	breq	.-12     	; 0xb92 <__mulsf3+0x14>
 b9e:	95 0f       	add	r25, r21
 ba0:	50 e0       	ldi	r21, 0x00	; 0
 ba2:	55 1f       	adc	r21, r21
 ba4:	62 9f       	mul	r22, r18
 ba6:	f0 01       	movw	r30, r0
 ba8:	72 9f       	mul	r23, r18
 baa:	bb 27       	eor	r27, r27
 bac:	f0 0d       	add	r31, r0
 bae:	b1 1d       	adc	r27, r1
 bb0:	63 9f       	mul	r22, r19
 bb2:	aa 27       	eor	r26, r26
 bb4:	f0 0d       	add	r31, r0
 bb6:	b1 1d       	adc	r27, r1
 bb8:	aa 1f       	adc	r26, r26
 bba:	64 9f       	mul	r22, r20
 bbc:	66 27       	eor	r22, r22
 bbe:	b0 0d       	add	r27, r0
 bc0:	a1 1d       	adc	r26, r1
 bc2:	66 1f       	adc	r22, r22
 bc4:	82 9f       	mul	r24, r18
 bc6:	22 27       	eor	r18, r18
 bc8:	b0 0d       	add	r27, r0
 bca:	a1 1d       	adc	r26, r1
 bcc:	62 1f       	adc	r22, r18
 bce:	73 9f       	mul	r23, r19
 bd0:	b0 0d       	add	r27, r0
 bd2:	a1 1d       	adc	r26, r1
 bd4:	62 1f       	adc	r22, r18
 bd6:	83 9f       	mul	r24, r19
 bd8:	a0 0d       	add	r26, r0
 bda:	61 1d       	adc	r22, r1
 bdc:	22 1f       	adc	r18, r18
 bde:	74 9f       	mul	r23, r20
 be0:	33 27       	eor	r19, r19
 be2:	a0 0d       	add	r26, r0
 be4:	61 1d       	adc	r22, r1
 be6:	23 1f       	adc	r18, r19
 be8:	84 9f       	mul	r24, r20
 bea:	60 0d       	add	r22, r0
 bec:	21 1d       	adc	r18, r1
 bee:	82 2f       	mov	r24, r18
 bf0:	76 2f       	mov	r23, r22
 bf2:	6a 2f       	mov	r22, r26
 bf4:	11 24       	eor	r1, r1
 bf6:	9f 57       	subi	r25, 0x7F	; 127
 bf8:	50 40       	sbci	r21, 0x00	; 0
 bfa:	8a f0       	brmi	.+34     	; 0xc1e <__mulsf3_pse+0x84>
 bfc:	e1 f0       	breq	.+56     	; 0xc36 <__mulsf3_pse+0x9c>
 bfe:	88 23       	and	r24, r24
 c00:	4a f0       	brmi	.+18     	; 0xc14 <__mulsf3_pse+0x7a>
 c02:	ee 0f       	add	r30, r30
 c04:	ff 1f       	adc	r31, r31
 c06:	bb 1f       	adc	r27, r27
 c08:	66 1f       	adc	r22, r22
 c0a:	77 1f       	adc	r23, r23
 c0c:	88 1f       	adc	r24, r24
 c0e:	91 50       	subi	r25, 0x01	; 1
 c10:	50 40       	sbci	r21, 0x00	; 0
 c12:	a9 f7       	brne	.-22     	; 0xbfe <__mulsf3_pse+0x64>
 c14:	9e 3f       	cpi	r25, 0xFE	; 254
 c16:	51 05       	cpc	r21, r1
 c18:	70 f0       	brcs	.+28     	; 0xc36 <__mulsf3_pse+0x9c>
 c1a:	27 cf       	rjmp	.-434    	; 0xa6a <__fp_inf>
 c1c:	aa cf       	rjmp	.-172    	; 0xb72 <__fp_szero>
 c1e:	5f 3f       	cpi	r21, 0xFF	; 255
 c20:	ec f3       	brlt	.-6      	; 0xc1c <__mulsf3_pse+0x82>
 c22:	98 3e       	cpi	r25, 0xE8	; 232
 c24:	dc f3       	brlt	.-10     	; 0xc1c <__mulsf3_pse+0x82>
 c26:	86 95       	lsr	r24
 c28:	77 95       	ror	r23
 c2a:	67 95       	ror	r22
 c2c:	b7 95       	ror	r27
 c2e:	f7 95       	ror	r31
 c30:	e7 95       	ror	r30
 c32:	9f 5f       	subi	r25, 0xFF	; 255
 c34:	c1 f7       	brne	.-16     	; 0xc26 <__mulsf3_pse+0x8c>
 c36:	fe 2b       	or	r31, r30
 c38:	88 0f       	add	r24, r24
 c3a:	91 1d       	adc	r25, r1
 c3c:	96 95       	lsr	r25
 c3e:	87 95       	ror	r24
 c40:	97 f9       	bld	r25, 7
 c42:	08 95       	ret

00000c44 <sin>:
 c44:	9f 93       	push	r25
 c46:	29 df       	rcall	.-430    	; 0xa9a <__fp_rempio2>
 c48:	0f 90       	pop	r0
 c4a:	07 fc       	sbrc	r0, 7
 c4c:	ee 5f       	subi	r30, 0xFE	; 254
 c4e:	5d cf       	rjmp	.-326    	; 0xb0a <__fp_sinus>

00000c50 <__fp_mpack>:
 c50:	9f 3f       	cpi	r25, 0xFF	; 255
 c52:	31 f0       	breq	.+12     	; 0xc60 <__fp_mpack_finite+0xc>

00000c54 <__fp_mpack_finite>:
 c54:	91 50       	subi	r25, 0x01	; 1
 c56:	20 f4       	brcc	.+8      	; 0xc60 <__fp_mpack_finite+0xc>
 c58:	87 95       	ror	r24
 c5a:	77 95       	ror	r23
 c5c:	67 95       	ror	r22
 c5e:	b7 95       	ror	r27
 c60:	88 0f       	add	r24, r24
 c62:	91 1d       	adc	r25, r1
 c64:	96 95       	lsr	r25
 c66:	87 95       	ror	r24
 c68:	97 f9       	bld	r25, 7
 c6a:	08 95       	ret

00000c6c <__fp_powsodd>:
 c6c:	9f 93       	push	r25
 c6e:	8f 93       	push	r24
 c70:	7f 93       	push	r23
 c72:	6f 93       	push	r22
 c74:	ff 93       	push	r31
 c76:	ef 93       	push	r30
 c78:	9b 01       	movw	r18, r22
 c7a:	ac 01       	movw	r20, r24
 c7c:	80 df       	rcall	.-256    	; 0xb7e <__mulsf3>
 c7e:	ef 91       	pop	r30
 c80:	ff 91       	pop	r31
 c82:	05 d0       	rcall	.+10     	; 0xc8e <__fp_powser>
 c84:	2f 91       	pop	r18
 c86:	3f 91       	pop	r19
 c88:	4f 91       	pop	r20
 c8a:	5f 91       	pop	r21
 c8c:	78 cf       	rjmp	.-272    	; 0xb7e <__mulsf3>

00000c8e <__fp_powser>:
 c8e:	df 93       	push	r29
 c90:	cf 93       	push	r28
 c92:	1f 93       	push	r17
 c94:	0f 93       	push	r16
 c96:	ff 92       	push	r15
 c98:	ef 92       	push	r14
 c9a:	df 92       	push	r13
 c9c:	7b 01       	movw	r14, r22
 c9e:	8c 01       	movw	r16, r24
 ca0:	68 94       	set
 ca2:	05 c0       	rjmp	.+10     	; 0xcae <__fp_powser+0x20>
 ca4:	da 2e       	mov	r13, r26
 ca6:	ef 01       	movw	r28, r30
 ca8:	76 df       	rcall	.-276    	; 0xb96 <__mulsf3x>
 caa:	fe 01       	movw	r30, r28
 cac:	e8 94       	clt
 cae:	a5 91       	lpm	r26, Z+
 cb0:	25 91       	lpm	r18, Z+
 cb2:	35 91       	lpm	r19, Z+
 cb4:	45 91       	lpm	r20, Z+
 cb6:	55 91       	lpm	r21, Z+
 cb8:	ae f3       	brts	.-22     	; 0xca4 <__fp_powser+0x16>
 cba:	ef 01       	movw	r28, r30
 cbc:	aa dd       	rcall	.-1196   	; 0x812 <__addsf3x>
 cbe:	fe 01       	movw	r30, r28
 cc0:	97 01       	movw	r18, r14
 cc2:	a8 01       	movw	r20, r16
 cc4:	da 94       	dec	r13
 cc6:	79 f7       	brne	.-34     	; 0xca6 <__fp_powser+0x18>
 cc8:	df 90       	pop	r13
 cca:	ef 90       	pop	r14
 ccc:	ff 90       	pop	r15
 cce:	0f 91       	pop	r16
 cd0:	1f 91       	pop	r17
 cd2:	cf 91       	pop	r28
 cd4:	df 91       	pop	r29
 cd6:	08 95       	ret

00000cd8 <__itoa_ncheck>:
 cd8:	bb 27       	eor	r27, r27
 cda:	4a 30       	cpi	r20, 0x0A	; 10
 cdc:	31 f4       	brne	.+12     	; 0xcea <__itoa_ncheck+0x12>
 cde:	99 23       	and	r25, r25
 ce0:	22 f4       	brpl	.+8      	; 0xcea <__itoa_ncheck+0x12>
 ce2:	bd e2       	ldi	r27, 0x2D	; 45
 ce4:	90 95       	com	r25
 ce6:	81 95       	neg	r24
 ce8:	9f 4f       	sbci	r25, 0xFF	; 255
 cea:	01 c0       	rjmp	.+2      	; 0xcee <__utoa_common>

00000cec <__utoa_ncheck>:
 cec:	bb 27       	eor	r27, r27

00000cee <__utoa_common>:
 cee:	fb 01       	movw	r30, r22
 cf0:	55 27       	eor	r21, r21
 cf2:	aa 27       	eor	r26, r26
 cf4:	88 0f       	add	r24, r24
 cf6:	99 1f       	adc	r25, r25
 cf8:	aa 1f       	adc	r26, r26
 cfa:	a4 17       	cp	r26, r20
 cfc:	10 f0       	brcs	.+4      	; 0xd02 <__utoa_common+0x14>
 cfe:	a4 1b       	sub	r26, r20
 d00:	83 95       	inc	r24
 d02:	50 51       	subi	r21, 0x10	; 16
 d04:	b9 f7       	brne	.-18     	; 0xcf4 <__utoa_common+0x6>
 d06:	a0 5d       	subi	r26, 0xD0	; 208
 d08:	aa 33       	cpi	r26, 0x3A	; 58
 d0a:	08 f0       	brcs	.+2      	; 0xd0e <__utoa_common+0x20>
 d0c:	a9 5d       	subi	r26, 0xD9	; 217
 d0e:	a1 93       	st	Z+, r26
 d10:	00 97       	sbiw	r24, 0x00	; 0
 d12:	79 f7       	brne	.-34     	; 0xcf2 <__utoa_common+0x4>
 d14:	b1 11       	cpse	r27, r1
 d16:	b1 93       	st	Z+, r27
 d18:	11 92       	st	Z+, r1
 d1a:	cb 01       	movw	r24, r22
 d1c:	00 c0       	rjmp	.+0      	; 0xd1e <strrev>

00000d1e <strrev>:
 d1e:	dc 01       	movw	r26, r24
 d20:	fc 01       	movw	r30, r24
 d22:	67 2f       	mov	r22, r23
 d24:	71 91       	ld	r23, Z+
 d26:	77 23       	and	r23, r23
 d28:	e1 f7       	brne	.-8      	; 0xd22 <strrev+0x4>
 d2a:	32 97       	sbiw	r30, 0x02	; 2
 d2c:	04 c0       	rjmp	.+8      	; 0xd36 <strrev+0x18>
 d2e:	7c 91       	ld	r23, X
 d30:	6d 93       	st	X+, r22
 d32:	70 83       	st	Z, r23
 d34:	62 91       	ld	r22, -Z
 d36:	ae 17       	cp	r26, r30
 d38:	bf 07       	cpc	r27, r31
 d3a:	c8 f3       	brcs	.-14     	; 0xd2e <strrev+0x10>
 d3c:	08 95       	ret

00000d3e <_exit>:
 d3e:	f8 94       	cli

00000d40 <__stop_program>:
 d40:	ff cf       	rjmp	.-2      	; 0xd40 <__stop_program>
